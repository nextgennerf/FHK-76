# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 480)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("background: #FFFFFF;")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setAutoFillBackground(False)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 800, 480))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.tabWidget.setFont(font)
        self.tabWidget.setAutoFillBackground(False)
        self.tabWidget.setStyleSheet("QTabWidget::pane { /* The tab widget frame */\n"
"    border-top: 4px solid #61136E;\n"
"    margin-top: -2px;\n"
"}\n"
"\n"
"QTabWidget::tab-bar {\n"
"    left: 5px; /* move to the right by 5px */\n"
"}\n"
"\n"
"/* Style the tab using the tab sub-control. Note that\n"
"    it reads QTabBar _not_ QTabWidget */\n"
"QTabBar::tab {\n"
"    border: 2px solid #61136E;\n"
"    border-top-left-radius: 4px;\n"
"    border-top-right-radius: 4px;\n"
"    padding-top: 3px;\n"
"    padding-bottom: 3px;\n"
"    padding-left: 10px;\n"
"    padding-right: 10px;\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    background: #61136E;\n"
"    color: #FFFFFF;\n"
"}\n"
"\n"
"QTabBar::tab:!selected {\n"
"    margin-top: 2px; /* make non-selected tabs look smaller */\n"
"    color: #000000\n"
"}x")
        self.tabWidget.setObjectName("tabWidget")
        self.status = QtWidgets.QWidget()
        self.status.setStyleSheet("")
        self.status.setObjectName("status")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.status)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(0, 220, 801, 52))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.semiButton = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.semiButton.sizePolicy().hasHeightForWidth())
        self.semiButton.setSizePolicy(sizePolicy)
        self.semiButton.setMinimumSize(QtCore.QSize(175, 50))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.semiButton.setFont(font)
        self.semiButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:checked {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.semiButton.setCheckable(True)
        self.semiButton.setChecked(True)
        self.semiButton.setAutoExclusive(True)
        self.semiButton.setFlat(False)
        self.semiButton.setObjectName("semiButton")
        self.modeButtons = QtWidgets.QButtonGroup(MainWindow)
        self.modeButtons.setObjectName("modeButtons")
        self.modeButtons.addButton(self.semiButton)
        self.horizontalLayout.addWidget(self.semiButton)
        self.burstButton = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.burstButton.sizePolicy().hasHeightForWidth())
        self.burstButton.setSizePolicy(sizePolicy)
        self.burstButton.setMinimumSize(QtCore.QSize(175, 50))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.burstButton.setFont(font)
        self.burstButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:checked {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.burstButton.setCheckable(True)
        self.burstButton.setChecked(False)
        self.burstButton.setAutoExclusive(True)
        self.burstButton.setFlat(False)
        self.burstButton.setObjectName("burstButton")
        self.modeButtons.addButton(self.burstButton)
        self.horizontalLayout.addWidget(self.burstButton, 0, QtCore.Qt.AlignVCenter)
        self.autoButton = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.autoButton.sizePolicy().hasHeightForWidth())
        self.autoButton.setSizePolicy(sizePolicy)
        self.autoButton.setMinimumSize(QtCore.QSize(175, 50))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.autoButton.setFont(font)
        self.autoButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:checked {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.autoButton.setCheckable(True)
        self.autoButton.setChecked(False)
        self.autoButton.setAutoExclusive(True)
        self.autoButton.setFlat(False)
        self.autoButton.setObjectName("autoButton")
        self.modeButtons.addButton(self.autoButton)
        self.horizontalLayout.addWidget(self.autoButton)
        self.burstSlider = QtWidgets.QSlider(self.status)
        self.burstSlider.setGeometry(QtCore.QRect(230, 170, 331, 50))
        self.burstSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #000000;\n"
"    height: 4px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */\n"
"    background: #000000;\n"
"    margin: 5px;\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: qlineargradient(x1:0, y1:0, x2:1, y2:1, stop:0 #9313a0, stop:1 #2f133c);\n"
"    border: 1px solid #000000;\n"
"    width: 18px;\n"
"    margin: -16px 2px;\n"
"    border-radius: 3px;\n"
"}")
        self.burstSlider.setMinimum(1)
        self.burstSlider.setMaximum(10)
        self.burstSlider.setProperty("value", 3)
        self.burstSlider.setSliderPosition(3)
        self.burstSlider.setTracking(True)
        self.burstSlider.setOrientation(QtCore.Qt.Horizontal)
        self.burstSlider.setInvertedAppearance(False)
        self.burstSlider.setTickPosition(QtWidgets.QSlider.NoTicks)
        self.burstSlider.setTickInterval(1)
        self.burstSlider.setObjectName("burstSlider")
        self.fpsLCD = QtWidgets.QLCDNumber(self.status)
        self.fpsLCD.setGeometry(QtCore.QRect(80, 10, 320, 130))
        self.fpsLCD.setAutoFillBackground(False)
        self.fpsLCD.setStyleSheet("border: 3px solid #61136e;\n"
"border-radius: 8px;\n"
"color: #000000")
        self.fpsLCD.setFrameShape(QtWidgets.QFrame.Box)
        self.fpsLCD.setFrameShadow(QtWidgets.QFrame.Plain)
        self.fpsLCD.setLineWidth(0)
        self.fpsLCD.setSmallDecimalPoint(True)
        self.fpsLCD.setDigitCount(4)
        self.fpsLCD.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.fpsLCD.setProperty("value", 0.0)
        self.fpsLCD.setProperty("intValue", 0)
        self.fpsLCD.setObjectName("fpsLCD")
        self.FPSupButton = QtWidgets.QPushButton(self.status)
        self.FPSupButton.setGeometry(QtCore.QRect(10, 10, 60, 60))
        font = QtGui.QFont()
        font.setFamily("Webdings")
        font.setPointSize(64)
        self.FPSupButton.setFont(font)
        self.FPSupButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    padding-left:4px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.FPSupButton.setObjectName("FPSupButton")
        self.FPSdownButton = QtWidgets.QPushButton(self.status)
        self.FPSdownButton.setGeometry(QtCore.QRect(10, 80, 60, 60))
        font = QtGui.QFont()
        font.setFamily("Webdings")
        font.setPointSize(64)
        self.FPSdownButton.setFont(font)
        self.FPSdownButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    padding-left:4px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.FPSdownButton.setObjectName("FPSdownButton")
        self.ammoLCD = QtWidgets.QLCDNumber(self.status)
        self.ammoLCD.setGeometry(QtCore.QRect(470, 10, 320, 130))
        self.ammoLCD.setAutoFillBackground(False)
        self.ammoLCD.setStyleSheet("border: 3px solid #61136e;\n"
"border-radius: 8px;\n"
"color: #000000")
        self.ammoLCD.setFrameShape(QtWidgets.QFrame.Box)
        self.ammoLCD.setFrameShadow(QtWidgets.QFrame.Plain)
        self.ammoLCD.setLineWidth(0)
        self.ammoLCD.setSmallDecimalPoint(True)
        self.ammoLCD.setDigitCount(4)
        self.ammoLCD.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.ammoLCD.setProperty("value", 0.0)
        self.ammoLCD.setProperty("intValue", 0)
        self.ammoLCD.setObjectName("ammoLCD")
        self.FPS = QtWidgets.QLabel(self.status)
        self.FPS.setGeometry(QtCore.QRect(70, 140, 321, 31))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.FPS.setFont(font)
        self.FPS.setStyleSheet("color: #000000")
        self.FPS.setAlignment(QtCore.Qt.AlignCenter)
        self.FPS.setObjectName("FPS")
        self.AMMO = QtWidgets.QLabel(self.status)
        self.AMMO.setGeometry(QtCore.QRect(470, 140, 321, 31))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.AMMO.setFont(font)
        self.AMMO.setStyleSheet("color: #000000")
        self.AMMO.setAlignment(QtCore.Qt.AlignCenter)
        self.AMMO.setObjectName("AMMO")
        self.psiLCD = QtWidgets.QLCDNumber(self.status)
        self.psiLCD.setGeometry(QtCore.QRect(80, 300, 331, 130))
        self.psiLCD.setAutoFillBackground(False)
        self.psiLCD.setStyleSheet("border: 3px solid #61136e;\n"
"border-radius: 8px;\n"
"color: #000000")
        self.psiLCD.setFrameShape(QtWidgets.QFrame.Box)
        self.psiLCD.setFrameShadow(QtWidgets.QFrame.Plain)
        self.psiLCD.setLineWidth(0)
        self.psiLCD.setSmallDecimalPoint(True)
        self.psiLCD.setDigitCount(4)
        self.psiLCD.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.psiLCD.setProperty("value", 0.0)
        self.psiLCD.setProperty("intValue", 0)
        self.psiLCD.setObjectName("psiLCD")
        self.ROCKETPRESSURE = QtWidgets.QLabel(self.status)
        self.ROCKETPRESSURE.setGeometry(QtCore.QRect(420, 300, 141, 131))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.ROCKETPRESSURE.setFont(font)
        self.ROCKETPRESSURE.setStyleSheet("color: #000000")
        self.ROCKETPRESSURE.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.ROCKETPRESSURE.setWordWrap(True)
        self.ROCKETPRESSURE.setObjectName("ROCKETPRESSURE")
        self.PSIdownButton = QtWidgets.QPushButton(self.status)
        self.PSIdownButton.setGeometry(QtCore.QRect(10, 370, 60, 60))
        font = QtGui.QFont()
        font.setFamily("Webdings")
        font.setPointSize(64)
        self.PSIdownButton.setFont(font)
        self.PSIdownButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    padding-left:4px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.PSIdownButton.setObjectName("PSIdownButton")
        self.PSIupButton = QtWidgets.QPushButton(self.status)
        self.PSIupButton.setGeometry(QtCore.QRect(10, 300, 60, 60))
        font = QtGui.QFont()
        font.setFamily("Webdings")
        font.setPointSize(64)
        self.PSIupButton.setFont(font)
        self.PSIupButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    padding-left:4px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.PSIupButton.setObjectName("PSIupButton")
        self.laserButton = QtWidgets.QPushButton(self.status)
        self.laserButton.setGeometry(QtCore.QRect(610, 300, 181, 50))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.laserButton.sizePolicy().hasHeightForWidth())
        self.laserButton.setSizePolicy(sizePolicy)
        self.laserButton.setMinimumSize(QtCore.QSize(175, 50))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.laserButton.setFont(font)
        self.laserButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:checked {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.laserButton.setCheckable(True)
        self.laserButton.setChecked(False)
        self.laserButton.setAutoExclusive(False)
        self.laserButton.setFlat(False)
        self.laserButton.setObjectName("laserButton")
        self.lightButton = QtWidgets.QPushButton(self.status)
        self.lightButton.setGeometry(QtCore.QRect(610, 380, 181, 50))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lightButton.sizePolicy().hasHeightForWidth())
        self.lightButton.setSizePolicy(sizePolicy)
        self.lightButton.setMinimumSize(QtCore.QSize(175, 50))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.lightButton.setFont(font)
        self.lightButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:checked {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.lightButton.setCheckable(True)
        self.lightButton.setChecked(False)
        self.lightButton.setAutoExclusive(False)
        self.lightButton.setFlat(False)
        self.lightButton.setObjectName("lightButton")
        self.tabWidget.addTab(self.status, "")
        self.led = QtWidgets.QWidget()
        self.led.setStyleSheet("")
        self.led.setObjectName("led")
        self.tabWidget.addTab(self.led, "")
        self.data = QtWidgets.QWidget()
        self.data.setStyleSheet("")
        self.data.setObjectName("data")
        self.tabWidget.addTab(self.data, "")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.semiButton.setText(_translate("MainWindow", "semi-auto"))
        self.burstButton.setText(_translate("MainWindow", "burst: 3"))
        self.autoButton.setText(_translate("MainWindow", "automatic"))
        self.FPSupButton.setText(_translate("MainWindow", "5"))
        self.FPSdownButton.setText(_translate("MainWindow", "6"))
        self.FPS.setText(_translate("MainWindow", "FPS"))
        self.AMMO.setText(_translate("MainWindow", "AMMO"))
        self.ROCKETPRESSURE.setText(_translate("MainWindow", "Rocket Pressure"))
        self.PSIdownButton.setText(_translate("MainWindow", "6"))
        self.PSIupButton.setText(_translate("MainWindow", "5"))
        self.laserButton.setText(_translate("MainWindow", "laser"))
        self.lightButton.setText(_translate("MainWindow", "flashlight"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.status), _translate("MainWindow", "status"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.led), _translate("MainWindow", "led settings"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.data), _translate("MainWindow", "data logs"))
