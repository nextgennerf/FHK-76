# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 480)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("background: #FFFFFF;")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setAutoFillBackground(False)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 800, 480))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.tabWidget.setFont(font)
        self.tabWidget.setAutoFillBackground(False)
        self.tabWidget.setStyleSheet("QTabWidget::pane { /* The tab widget frame */\n"
"    border-top: 4px solid #61136E;\n"
"    margin-top: -2px;\n"
"}\n"
"\n"
"QTabWidget::tab-bar {\n"
"    left: 5px; /* move to the right by 5px */\n"
"}\n"
"\n"
"/* Style the tab using the tab sub-control. Note that\n"
"    it reads QTabBar _not_ QTabWidget */\n"
"QTabBar::tab {\n"
"    border: 2px solid #61136E;\n"
"    border-top-left-radius: 4px;\n"
"    border-top-right-radius: 4px;\n"
"    padding-top: 3px;\n"
"    padding-bottom: 3px;\n"
"    padding-left: 10px;\n"
"    padding-right: 10px;\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    background: #61136E;\n"
"    color: #FFFFFF;\n"
"}\n"
"\n"
"QTabBar::tab:!selected {\n"
"    margin-top: 2px; /* make non-selected tabs look smaller */\n"
"    color: #000000\n"
"}x")
        self.tabWidget.setObjectName("tabWidget")
        self.status = QtWidgets.QWidget()
        self.status.setStyleSheet("")
        self.status.setObjectName("status")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.status)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(0, 220, 801, 52))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.modeButtonLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.modeButtonLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.modeButtonLayout.setContentsMargins(0, 0, 0, 0)
        self.modeButtonLayout.setSpacing(0)
        self.modeButtonLayout.setObjectName("modeButtonLayout")
        self.semiButton = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.semiButton.sizePolicy().hasHeightForWidth())
        self.semiButton.setSizePolicy(sizePolicy)
        self.semiButton.setMinimumSize(QtCore.QSize(175, 50))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.semiButton.setFont(font)
        self.semiButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:checked {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.semiButton.setCheckable(True)
        self.semiButton.setChecked(True)
        self.semiButton.setAutoExclusive(True)
        self.semiButton.setFlat(False)
        self.semiButton.setObjectName("semiButton")
        self.modeButtons = QtWidgets.QButtonGroup(MainWindow)
        self.modeButtons.setObjectName("modeButtons")
        self.modeButtons.addButton(self.semiButton)
        self.modeButtonLayout.addWidget(self.semiButton)
        self.burstButton = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.burstButton.sizePolicy().hasHeightForWidth())
        self.burstButton.setSizePolicy(sizePolicy)
        self.burstButton.setMinimumSize(QtCore.QSize(175, 50))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.burstButton.setFont(font)
        self.burstButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:checked {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.burstButton.setCheckable(True)
        self.burstButton.setChecked(False)
        self.burstButton.setAutoExclusive(True)
        self.burstButton.setFlat(False)
        self.burstButton.setObjectName("burstButton")
        self.modeButtons.addButton(self.burstButton)
        self.modeButtonLayout.addWidget(self.burstButton, 0, QtCore.Qt.AlignVCenter)
        self.autoButton = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.autoButton.sizePolicy().hasHeightForWidth())
        self.autoButton.setSizePolicy(sizePolicy)
        self.autoButton.setMinimumSize(QtCore.QSize(175, 50))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.autoButton.setFont(font)
        self.autoButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:checked {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.autoButton.setCheckable(True)
        self.autoButton.setChecked(False)
        self.autoButton.setAutoExclusive(True)
        self.autoButton.setFlat(False)
        self.autoButton.setObjectName("autoButton")
        self.modeButtons.addButton(self.autoButton)
        self.modeButtonLayout.addWidget(self.autoButton)
        self.burstSlider = QtWidgets.QSlider(self.status)
        self.burstSlider.setGeometry(QtCore.QRect(230, 170, 331, 50))
        self.burstSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #000000;\n"
"    height: 4px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */\n"
"    background: #000000;\n"
"    margin: 5px;\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: qlineargradient(x1:0, y1:0, x2:1, y2:1, stop:0 #9313a0, stop:1 #2f133c);\n"
"    border: 1px solid #000000;\n"
"    width: 18px;\n"
"    margin: -16px 2px;\n"
"    border-radius: 3px;\n"
"}")
        self.burstSlider.setMinimum(1)
        self.burstSlider.setMaximum(10)
        self.burstSlider.setProperty("value", 3)
        self.burstSlider.setSliderPosition(3)
        self.burstSlider.setTracking(True)
        self.burstSlider.setOrientation(QtCore.Qt.Horizontal)
        self.burstSlider.setInvertedAppearance(False)
        self.burstSlider.setTickPosition(QtWidgets.QSlider.NoTicks)
        self.burstSlider.setTickInterval(1)
        self.burstSlider.setObjectName("burstSlider")
        self.fpsLCD = QtWidgets.QLCDNumber(self.status)
        self.fpsLCD.setGeometry(QtCore.QRect(10, 10, 400, 130))
        self.fpsLCD.setAutoFillBackground(False)
        self.fpsLCD.setStyleSheet("border: 3px solid #61136e;\n"
"border-radius: 8px;\n"
"color: #000000")
        self.fpsLCD.setFrameShape(QtWidgets.QFrame.Box)
        self.fpsLCD.setFrameShadow(QtWidgets.QFrame.Plain)
        self.fpsLCD.setLineWidth(0)
        self.fpsLCD.setSmallDecimalPoint(True)
        self.fpsLCD.setDigitCount(5)
        self.fpsLCD.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.fpsLCD.setProperty("value", 0.0)
        self.fpsLCD.setProperty("intValue", 0)
        self.fpsLCD.setObjectName("fpsLCD")
        self.FPSupButton = QtWidgets.QPushButton(self.status)
        self.FPSupButton.setGeometry(QtCore.QRect(10, 10, 60, 60))
        font = QtGui.QFont()
        font.setFamily("Webdings")
        font.setPointSize(64)
        self.FPSupButton.setFont(font)
        self.FPSupButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    padding-left:4px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.FPSupButton.setObjectName("FPSupButton")
        self.FPSdownButton = QtWidgets.QPushButton(self.status)
        self.FPSdownButton.setGeometry(QtCore.QRect(10, 80, 60, 60))
        font = QtGui.QFont()
        font.setFamily("Webdings")
        font.setPointSize(64)
        self.FPSdownButton.setFont(font)
        self.FPSdownButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    padding-left:4px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.FPSdownButton.setObjectName("FPSdownButton")
        self.ammoLCD = QtWidgets.QLCDNumber(self.status)
        self.ammoLCD.setGeometry(QtCore.QRect(470, 10, 320, 130))
        self.ammoLCD.setAutoFillBackground(False)
        self.ammoLCD.setStyleSheet("border: 3px solid #61136e;\n"
"border-radius: 8px;\n"
"color: #000000")
        self.ammoLCD.setFrameShape(QtWidgets.QFrame.Box)
        self.ammoLCD.setFrameShadow(QtWidgets.QFrame.Plain)
        self.ammoLCD.setLineWidth(0)
        self.ammoLCD.setSmallDecimalPoint(True)
        self.ammoLCD.setDigitCount(3)
        self.ammoLCD.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.ammoLCD.setProperty("value", 0.0)
        self.ammoLCD.setProperty("intValue", 0)
        self.ammoLCD.setObjectName("ammoLCD")
        self.FPS = QtWidgets.QLabel(self.status)
        self.FPS.setGeometry(QtCore.QRect(70, 140, 321, 31))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.FPS.setFont(font)
        self.FPS.setStyleSheet("color: #000000")
        self.FPS.setAlignment(QtCore.Qt.AlignCenter)
        self.FPS.setObjectName("FPS")
        self.AMMO = QtWidgets.QLabel(self.status)
        self.AMMO.setGeometry(QtCore.QRect(470, 140, 321, 31))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.AMMO.setFont(font)
        self.AMMO.setStyleSheet("color: #000000")
        self.AMMO.setAlignment(QtCore.Qt.AlignCenter)
        self.AMMO.setObjectName("AMMO")
        self.psiLCD = QtWidgets.QLCDNumber(self.status)
        self.psiLCD.setGeometry(QtCore.QRect(10, 300, 400, 130))
        self.psiLCD.setAutoFillBackground(False)
        self.psiLCD.setStyleSheet("border: 3px solid #61136e;\n"
"border-radius: 8px;\n"
"color: #000000")
        self.psiLCD.setFrameShadow(QtWidgets.QFrame.Plain)
        self.psiLCD.setLineWidth(0)
        self.psiLCD.setSmallDecimalPoint(True)
        self.psiLCD.setDigitCount(5)
        self.psiLCD.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.psiLCD.setProperty("value", 0.0)
        self.psiLCD.setProperty("intValue", 0)
        self.psiLCD.setObjectName("psiLCD")
        self.ROCKETPRESSURE = QtWidgets.QLabel(self.status)
        self.ROCKETPRESSURE.setGeometry(QtCore.QRect(420, 300, 141, 131))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.ROCKETPRESSURE.setFont(font)
        self.ROCKETPRESSURE.setStyleSheet("color: #000000")
        self.ROCKETPRESSURE.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.ROCKETPRESSURE.setWordWrap(True)
        self.ROCKETPRESSURE.setObjectName("ROCKETPRESSURE")
        self.PSIdownButton = QtWidgets.QPushButton(self.status)
        self.PSIdownButton.setGeometry(QtCore.QRect(10, 370, 60, 60))
        font = QtGui.QFont()
        font.setFamily("Webdings")
        font.setPointSize(64)
        self.PSIdownButton.setFont(font)
        self.PSIdownButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    padding-left:4px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.PSIdownButton.setObjectName("PSIdownButton")
        self.PSIupButton = QtWidgets.QPushButton(self.status)
        self.PSIupButton.setGeometry(QtCore.QRect(10, 300, 60, 60))
        font = QtGui.QFont()
        font.setFamily("Webdings")
        font.setPointSize(64)
        self.PSIupButton.setFont(font)
        self.PSIupButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    padding-left:4px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.PSIupButton.setObjectName("PSIupButton")
        self.laserButton = QtWidgets.QPushButton(self.status)
        self.laserButton.setGeometry(QtCore.QRect(610, 300, 181, 50))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.laserButton.sizePolicy().hasHeightForWidth())
        self.laserButton.setSizePolicy(sizePolicy)
        self.laserButton.setMinimumSize(QtCore.QSize(175, 50))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.laserButton.setFont(font)
        self.laserButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:checked {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.laserButton.setCheckable(True)
        self.laserButton.setChecked(False)
        self.laserButton.setAutoExclusive(False)
        self.laserButton.setFlat(False)
        self.laserButton.setObjectName("laserButton")
        self.lightButton = QtWidgets.QPushButton(self.status)
        self.lightButton.setGeometry(QtCore.QRect(610, 380, 181, 50))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lightButton.sizePolicy().hasHeightForWidth())
        self.lightButton.setSizePolicy(sizePolicy)
        self.lightButton.setMinimumSize(QtCore.QSize(175, 50))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.lightButton.setFont(font)
        self.lightButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:checked {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.lightButton.setCheckable(True)
        self.lightButton.setChecked(False)
        self.lightButton.setAutoExclusive(False)
        self.lightButton.setFlat(False)
        self.lightButton.setObjectName("lightButton")
        self.tabWidget.addTab(self.status, "")
        self.led = QtWidgets.QWidget()
        self.led.setStyleSheet("")
        self.led.setObjectName("led")
        self.toolBox = QtWidgets.QToolBox(self.led)
        self.toolBox.setGeometry(QtCore.QRect(0, 10, 800, 420))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.toolBox.setFont(font)
        self.toolBox.setStyleSheet("QToolBox::tab {\n"
"    color: #000000\n"
"}\n"
"\n"
"QToolBox::tab:selected {\n"
"    color: #61136E\n"
"}")
        self.toolBox.setObjectName("toolBox")
        self.leftSide = QtWidgets.QWidget()
        self.leftSide.setGeometry(QtCore.QRect(0, 0, 800, 252))
        self.leftSide.setObjectName("leftSide")
        self.gridLayoutWidget = QtWidgets.QWidget(self.leftSide)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(0, 0, 821, 251))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.leftGrid = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.leftGrid.setContentsMargins(0, 0, 0, 0)
        self.leftGrid.setHorizontalSpacing(4)
        self.leftGrid.setVerticalSpacing(3)
        self.leftGrid.setObjectName("leftGrid")
        self.leftGreenValue = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftGreenValue.setFont(font)
        self.leftGreenValue.setStyleSheet("color: #d6d6d6")
        self.leftGreenValue.setAlignment(QtCore.Qt.AlignCenter)
        self.leftGreenValue.setObjectName("leftGreenValue")
        self.leftGrid.addWidget(self.leftGreenValue, 2, 1, 1, 1)
        self.leftSTYLE = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftSTYLE.setFont(font)
        self.leftSTYLE.setStyleSheet("color: #000000")
        self.leftSTYLE.setAlignment(QtCore.Qt.AlignCenter)
        self.leftSTYLE.setObjectName("leftSTYLE")
        self.leftGrid.addWidget(self.leftSTYLE, 0, 4, 1, 1)
        self.leftRedLabel = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftRedLabel.setFont(font)
        self.leftRedLabel.setStyleSheet("color: #d6d6d6")
        self.leftRedLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.leftRedLabel.setObjectName("leftRedLabel")
        self.leftGrid.addWidget(self.leftRedLabel, 0, 0, 1, 1)
        self.leftRedValue = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftRedValue.setFont(font)
        self.leftRedValue.setStyleSheet("color: #d6d6d6")
        self.leftRedValue.setAlignment(QtCore.Qt.AlignCenter)
        self.leftRedValue.setObjectName("leftRedValue")
        self.leftGrid.addWidget(self.leftRedValue, 2, 0, 1, 1)
        self.leftGreenSlider = QtWidgets.QSlider(self.gridLayoutWidget)
        self.leftGreenSlider.setEnabled(False)
        self.leftGreenSlider.setMinimumSize(QtCore.QSize(90, 0))
        self.leftGreenSlider.setStyleSheet("QSlider::groove:vertical {\n"
"    border: 1px solid #d6d6d6;\n"
"    width: 4px;\n"
"    background: #d6d6d6;\n"
"    margin: 5px;\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"    background: #ffffff;\n"
"    border: 1px solid #d6d6d6;\n"
"    height: 18px;\n"
"    margin: 2px -20px;\n"
"    border-radius: 3px;\n"
"}")
        self.leftGreenSlider.setMaximum(255)
        self.leftGreenSlider.setPageStep(16)
        self.leftGreenSlider.setOrientation(QtCore.Qt.Vertical)
        self.leftGreenSlider.setObjectName("leftGreenSlider")
        self.leftGrid.addWidget(self.leftGreenSlider, 1, 1, 1, 1)
        self.leftGreenLabel = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftGreenLabel.setFont(font)
        self.leftGreenLabel.setStyleSheet("color: #d6d6d6")
        self.leftGreenLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.leftGreenLabel.setObjectName("leftGreenLabel")
        self.leftGrid.addWidget(self.leftGreenLabel, 0, 1, 1, 1)
        self.leftBlueSlider = QtWidgets.QSlider(self.gridLayoutWidget)
        self.leftBlueSlider.setEnabled(False)
        self.leftBlueSlider.setMinimumSize(QtCore.QSize(90, 0))
        self.leftBlueSlider.setStyleSheet("QSlider::groove:vertical {\n"
"    border: 1px solid #d6d6d6;\n"
"    width: 4px;\n"
"    background: #d6d6d6;\n"
"    margin: 5px;\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"    background: #ffffff;\n"
"    border: 1px solid #d6d6d6;\n"
"    height: 18px;\n"
"    margin: 2px -20px;\n"
"    border-radius: 3px;\n"
"}")
        self.leftBlueSlider.setMaximum(255)
        self.leftBlueSlider.setPageStep(16)
        self.leftBlueSlider.setOrientation(QtCore.Qt.Vertical)
        self.leftBlueSlider.setObjectName("leftBlueSlider")
        self.leftGrid.addWidget(self.leftBlueSlider, 1, 2, 1, 1)
        self.leftBlueLabel = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftBlueLabel.setFont(font)
        self.leftBlueLabel.setStyleSheet("color: #d6d6d6")
        self.leftBlueLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.leftBlueLabel.setObjectName("leftBlueLabel")
        self.leftGrid.addWidget(self.leftBlueLabel, 0, 2, 1, 1)
        self.leftColor = QtWidgets.QLabel(self.gridLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.leftColor.sizePolicy().hasHeightForWidth())
        self.leftColor.setSizePolicy(sizePolicy)
        self.leftColor.setMinimumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftColor.setFont(font)
        self.leftColor.setStyleSheet("border: 2px solid #000000; color: #000000; background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(255, 0, 0, 255), stop:0.166 rgba(255, 255, 0, 255), stop:0.333 rgba(0, 255, 0, 255), stop:0.5 rgba(0, 255, 255, 255), stop:0.666 rgba(0, 0, 255, 255), stop:0.833 rgba(255, 0, 255, 255), stop:1 rgba(255, 0, 0, 255))")
        self.leftColor.setText("")
        self.leftColor.setAlignment(QtCore.Qt.AlignCenter)
        self.leftColor.setIndent(-1)
        self.leftColor.setObjectName("leftColor")
        self.leftGrid.addWidget(self.leftColor, 1, 3, 1, 1)
        self.leftRedSlider = QtWidgets.QSlider(self.gridLayoutWidget)
        self.leftRedSlider.setEnabled(False)
        self.leftRedSlider.setMinimumSize(QtCore.QSize(90, 0))
        self.leftRedSlider.setStyleSheet("QSlider::groove:vertical {\n"
"    border: 1px solid #d6d6d6;\n"
"    width: 4px;\n"
"    background: #d6d6d6;\n"
"    margin: 5px;\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"    background: #ffffff;\n"
"    border: 1px solid #d6d6d6;\n"
"    height: 18px;\n"
"    margin: 2px -20px;\n"
"    border-radius: 3px;\n"
"}")
        self.leftRedSlider.setMaximum(255)
        self.leftRedSlider.setPageStep(16)
        self.leftRedSlider.setOrientation(QtCore.Qt.Vertical)
        self.leftRedSlider.setObjectName("leftRedSlider")
        self.leftGrid.addWidget(self.leftRedSlider, 1, 0, 1, 1)
        self.leftAnimationLayout = QtWidgets.QVBoxLayout()
        self.leftAnimationLayout.setSpacing(0)
        self.leftAnimationLayout.setObjectName("leftAnimationLayout")
        self.leftButtonLayout = QtWidgets.QHBoxLayout()
        self.leftButtonLayout.setContentsMargins(-1, -1, 0, -1)
        self.leftButtonLayout.setSpacing(0)
        self.leftButtonLayout.setObjectName("leftButtonLayout")
        self.leftStaticButton = QtWidgets.QRadioButton(self.gridLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.leftStaticButton.sizePolicy().hasHeightForWidth())
        self.leftStaticButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftStaticButton.setFont(font)
        self.leftStaticButton.setStyleSheet("QRadioButton{color: #000000}\n"
"\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px}\n"
"\n"
"QRadioButton::indicator:checked{border: 10px solid #61136E; width: 10px; height: 10px}")
        self.leftStaticButton.setIconSize(QtCore.QSize(16, 15))
        self.leftStaticButton.setChecked(False)
        self.leftStaticButton.setObjectName("leftStaticButton")
        self.leftButtons = QtWidgets.QButtonGroup(MainWindow)
        self.leftButtons.setObjectName("leftButtons")
        self.leftButtons.addButton(self.leftStaticButton)
        self.leftButtonLayout.addWidget(self.leftStaticButton)
        self.leftBreatheButton = QtWidgets.QRadioButton(self.gridLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.leftBreatheButton.sizePolicy().hasHeightForWidth())
        self.leftBreatheButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftBreatheButton.setFont(font)
        self.leftBreatheButton.setStyleSheet("QRadioButton{color: #000000}\n"
"\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px}\n"
"\n"
"QRadioButton::indicator:checked{border: 10px solid #61136E; width: 10px; height: 10px}")
        self.leftBreatheButton.setIconSize(QtCore.QSize(16, 15))
        self.leftBreatheButton.setChecked(False)
        self.leftBreatheButton.setObjectName("leftBreatheButton")
        self.leftButtons.addButton(self.leftBreatheButton)
        self.leftButtonLayout.addWidget(self.leftBreatheButton)
        self.leftCycleButton = QtWidgets.QRadioButton(self.gridLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.leftCycleButton.sizePolicy().hasHeightForWidth())
        self.leftCycleButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftCycleButton.setFont(font)
        self.leftCycleButton.setStyleSheet("QRadioButton{color: #000000}\n"
"\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px}\n"
"\n"
"QRadioButton::indicator:checked{border: 10px solid #61136E; width: 10px; height: 10px}")
        self.leftCycleButton.setIconSize(QtCore.QSize(16, 15))
        self.leftCycleButton.setChecked(True)
        self.leftCycleButton.setObjectName("leftCycleButton")
        self.leftButtons.addButton(self.leftCycleButton)
        self.leftButtonLayout.addWidget(self.leftCycleButton)
        self.leftAnimationLayout.addLayout(self.leftButtonLayout)
        self.leftDial = QtWidgets.QDial(self.gridLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.leftDial.sizePolicy().hasHeightForWidth())
        self.leftDial.setSizePolicy(sizePolicy)
        self.leftDial.setMinimumSize(QtCore.QSize(0, 150))
        self.leftDial.setMaximum(30)
        self.leftDial.setPageStep(5)
        self.leftDial.setProperty("value", 1)
        self.leftDial.setWrapping(False)
        self.leftDial.setNotchesVisible(True)
        self.leftDial.setObjectName("leftDial")
        self.leftAnimationLayout.addWidget(self.leftDial)
        self.leftGrid.addLayout(self.leftAnimationLayout, 1, 4, 1, 1)
        self.leftBlueValue = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftBlueValue.setFont(font)
        self.leftBlueValue.setStyleSheet("color: #d6d6d6")
        self.leftBlueValue.setAlignment(QtCore.Qt.AlignCenter)
        self.leftBlueValue.setObjectName("leftBlueValue")
        self.leftGrid.addWidget(self.leftBlueValue, 2, 2, 1, 1)
        self.leftCYCLE = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftCYCLE.setFont(font)
        self.leftCYCLE.setStyleSheet("color: #000000")
        self.leftCYCLE.setAlignment(QtCore.Qt.AlignCenter)
        self.leftCYCLE.setObjectName("leftCYCLE")
        self.leftGrid.addWidget(self.leftCYCLE, 2, 4, 1, 1)
        self.toolBox.addItem(self.leftSide, "")
        self.rightSide = QtWidgets.QWidget()
        self.rightSide.setGeometry(QtCore.QRect(0, 0, 800, 252))
        self.rightSide.setObjectName("rightSide")
        self.gridLayoutWidget_2 = QtWidgets.QWidget(self.rightSide)
        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(0, 0, 821, 251))
        self.gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        self.rightGrid = QtWidgets.QGridLayout(self.gridLayoutWidget_2)
        self.rightGrid.setContentsMargins(0, 0, 0, 0)
        self.rightGrid.setHorizontalSpacing(4)
        self.rightGrid.setVerticalSpacing(3)
        self.rightGrid.setObjectName("rightGrid")
        self.rightRedSlider = QtWidgets.QSlider(self.gridLayoutWidget_2)
        self.rightRedSlider.setEnabled(False)
        self.rightRedSlider.setMinimumSize(QtCore.QSize(90, 0))
        self.rightRedSlider.setStyleSheet("QSlider::groove:vertical {\n"
"    border: 1px solid #d6d6d6;\n"
"    width: 4px;\n"
"    background: #d6d6d6;\n"
"    margin: 5px;\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"    background: #ffffff;\n"
"    border: 1px solid #d6d6d6;\n"
"    height: 18px;\n"
"    margin: 2px -20px;\n"
"    border-radius: 3px;\n"
"}")
        self.rightRedSlider.setMaximum(255)
        self.rightRedSlider.setPageStep(16)
        self.rightRedSlider.setOrientation(QtCore.Qt.Vertical)
        self.rightRedSlider.setObjectName("rightRedSlider")
        self.rightGrid.addWidget(self.rightRedSlider, 1, 0, 1, 1)
        self.rightRedLabel = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightRedLabel.setFont(font)
        self.rightRedLabel.setStyleSheet("color: #d6d6d6")
        self.rightRedLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.rightRedLabel.setObjectName("rightRedLabel")
        self.rightGrid.addWidget(self.rightRedLabel, 0, 0, 1, 1)
        self.rightGreenValue = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightGreenValue.setFont(font)
        self.rightGreenValue.setStyleSheet("color: #d6d6d6")
        self.rightGreenValue.setAlignment(QtCore.Qt.AlignCenter)
        self.rightGreenValue.setObjectName("rightGreenValue")
        self.rightGrid.addWidget(self.rightGreenValue, 2, 1, 1, 1)
        self.rightColor = QtWidgets.QLabel(self.gridLayoutWidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rightColor.sizePolicy().hasHeightForWidth())
        self.rightColor.setSizePolicy(sizePolicy)
        self.rightColor.setMinimumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightColor.setFont(font)
        self.rightColor.setStyleSheet("border: 2px solid #000000;\n"
"color: #000000;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(255, 0, 0, 255), stop:0.166 rgba(255, 255, 0, 255), stop:0.333 rgba(0, 255, 0, 255), stop:0.5 rgba(0, 255, 255, 255), stop:0.666 rgba(0, 0, 255, 255), stop:0.833 rgba(255, 0, 255, 255), stop:1 rgba(255, 0, 0, 255));")
        self.rightColor.setFrameShape(QtWidgets.QFrame.Box)
        self.rightColor.setText("")
        self.rightColor.setAlignment(QtCore.Qt.AlignCenter)
        self.rightColor.setObjectName("rightColor")
        self.rightGrid.addWidget(self.rightColor, 1, 3, 1, 1)
        self.rightAnimationLayout = QtWidgets.QVBoxLayout()
        self.rightAnimationLayout.setSpacing(0)
        self.rightAnimationLayout.setObjectName("rightAnimationLayout")
        self.rightButtonLayout = QtWidgets.QHBoxLayout()
        self.rightButtonLayout.setSpacing(0)
        self.rightButtonLayout.setObjectName("rightButtonLayout")
        self.rightStaticButton = QtWidgets.QRadioButton(self.gridLayoutWidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rightStaticButton.sizePolicy().hasHeightForWidth())
        self.rightStaticButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightStaticButton.setFont(font)
        self.rightStaticButton.setStyleSheet("QRadioButton{color: #000000}\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px}\n"
"QRadioButton::indicator:checked{border: 10px solid #61136E; width: 10px; height: 10px}")
        self.rightStaticButton.setIconSize(QtCore.QSize(16, 15))
        self.rightStaticButton.setChecked(False)
        self.rightStaticButton.setObjectName("rightStaticButton")
        self.rightButtons = QtWidgets.QButtonGroup(MainWindow)
        self.rightButtons.setObjectName("rightButtons")
        self.rightButtons.addButton(self.rightStaticButton)
        self.rightButtonLayout.addWidget(self.rightStaticButton)
        self.rightBreatheButton = QtWidgets.QRadioButton(self.gridLayoutWidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rightBreatheButton.sizePolicy().hasHeightForWidth())
        self.rightBreatheButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightBreatheButton.setFont(font)
        self.rightBreatheButton.setStyleSheet("QRadioButton{color: #000000}\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px}\n"
"QRadioButton::indicator:checked{border: 10px solid #61136E; width: 10px; height: 10px}")
        self.rightBreatheButton.setIconSize(QtCore.QSize(16, 15))
        self.rightBreatheButton.setChecked(False)
        self.rightBreatheButton.setObjectName("rightBreatheButton")
        self.rightButtons.addButton(self.rightBreatheButton)
        self.rightButtonLayout.addWidget(self.rightBreatheButton)
        self.rightCycleButton = QtWidgets.QRadioButton(self.gridLayoutWidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rightCycleButton.sizePolicy().hasHeightForWidth())
        self.rightCycleButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightCycleButton.setFont(font)
        self.rightCycleButton.setStyleSheet("QRadioButton{color: #000000}\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px}\n"
"QRadioButton::indicator:checked{border: 10px solid #61136E; width: 10px; height: 10px}")
        self.rightCycleButton.setIconSize(QtCore.QSize(16, 15))
        self.rightCycleButton.setChecked(True)
        self.rightCycleButton.setObjectName("rightCycleButton")
        self.rightButtons.addButton(self.rightCycleButton)
        self.rightButtonLayout.addWidget(self.rightCycleButton)
        self.rightAnimationLayout.addLayout(self.rightButtonLayout)
        self.rightDial = QtWidgets.QDial(self.gridLayoutWidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rightDial.sizePolicy().hasHeightForWidth())
        self.rightDial.setSizePolicy(sizePolicy)
        self.rightDial.setMinimumSize(QtCore.QSize(0, 150))
        self.rightDial.setMaximum(30)
        self.rightDial.setPageStep(5)
        self.rightDial.setProperty("value", 1)
        self.rightDial.setWrapping(False)
        self.rightDial.setNotchesVisible(True)
        self.rightDial.setObjectName("rightDial")
        self.rightAnimationLayout.addWidget(self.rightDial)
        self.rightGrid.addLayout(self.rightAnimationLayout, 1, 4, 1, 1)
        self.rightGreenSlider = QtWidgets.QSlider(self.gridLayoutWidget_2)
        self.rightGreenSlider.setEnabled(False)
        self.rightGreenSlider.setMinimumSize(QtCore.QSize(90, 0))
        self.rightGreenSlider.setStyleSheet("QSlider::groove:vertical {\n"
"    border: 1px solid #d6d6d6;\n"
"    width: 4px;\n"
"    background: #d6d6d6;\n"
"    margin: 5px;\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"    background: #ffffff;\n"
"    border: 1px solid #d6d6d6;\n"
"    height: 18px;\n"
"    margin: 2px -20px;\n"
"    border-radius: 3px;\n"
"}")
        self.rightGreenSlider.setMaximum(255)
        self.rightGreenSlider.setPageStep(16)
        self.rightGreenSlider.setOrientation(QtCore.Qt.Vertical)
        self.rightGreenSlider.setObjectName("rightGreenSlider")
        self.rightGrid.addWidget(self.rightGreenSlider, 1, 1, 1, 1)
        self.rightCYCLE = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightCYCLE.setFont(font)
        self.rightCYCLE.setStyleSheet("color: #000000")
        self.rightCYCLE.setAlignment(QtCore.Qt.AlignCenter)
        self.rightCYCLE.setObjectName("rightCYCLE")
        self.rightGrid.addWidget(self.rightCYCLE, 2, 4, 1, 1)
        self.rightBlueLabel = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightBlueLabel.setFont(font)
        self.rightBlueLabel.setStyleSheet("color: #d6d6d6")
        self.rightBlueLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.rightBlueLabel.setObjectName("rightBlueLabel")
        self.rightGrid.addWidget(self.rightBlueLabel, 0, 2, 1, 1)
        self.rightBlueValue = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightBlueValue.setFont(font)
        self.rightBlueValue.setStyleSheet("color: #d6d6d6")
        self.rightBlueValue.setAlignment(QtCore.Qt.AlignCenter)
        self.rightBlueValue.setObjectName("rightBlueValue")
        self.rightGrid.addWidget(self.rightBlueValue, 2, 2, 1, 1)
        self.rightRedValue = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightRedValue.setFont(font)
        self.rightRedValue.setStyleSheet("color: #d6d6d6")
        self.rightRedValue.setAlignment(QtCore.Qt.AlignCenter)
        self.rightRedValue.setObjectName("rightRedValue")
        self.rightGrid.addWidget(self.rightRedValue, 2, 0, 1, 1)
        self.rightBlueSlider = QtWidgets.QSlider(self.gridLayoutWidget_2)
        self.rightBlueSlider.setEnabled(False)
        self.rightBlueSlider.setMinimumSize(QtCore.QSize(90, 0))
        self.rightBlueSlider.setStyleSheet("QSlider::groove:vertical {\n"
"    border: 1px solid #d6d6d6;\n"
"    width: 4px;\n"
"    background: #d6d6d6;\n"
"    margin: 5px;\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"    background: #ffffff;\n"
"    border: 1px solid #d6d6d6;\n"
"    height: 18px;\n"
"    margin: 2px -20px;\n"
"    border-radius: 3px;\n"
"}")
        self.rightBlueSlider.setMaximum(255)
        self.rightBlueSlider.setPageStep(16)
        self.rightBlueSlider.setOrientation(QtCore.Qt.Vertical)
        self.rightBlueSlider.setObjectName("rightBlueSlider")
        self.rightGrid.addWidget(self.rightBlueSlider, 1, 2, 1, 1)
        self.rightSTYLE = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightSTYLE.setFont(font)
        self.rightSTYLE.setStyleSheet("color: #000000")
        self.rightSTYLE.setAlignment(QtCore.Qt.AlignCenter)
        self.rightSTYLE.setObjectName("rightSTYLE")
        self.rightGrid.addWidget(self.rightSTYLE, 0, 4, 1, 1)
        self.rightGreenLabel = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightGreenLabel.setFont(font)
        self.rightGreenLabel.setStyleSheet("color: #d6d6d6")
        self.rightGreenLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.rightGreenLabel.setObjectName("rightGreenLabel")
        self.rightGrid.addWidget(self.rightGreenLabel, 0, 1, 1, 1)
        self.toolBox.addItem(self.rightSide, "")
        self.frontPattern = QtWidgets.QWidget()
        self.frontPattern.setGeometry(QtCore.QRect(0, 0, 800, 252))
        self.frontPattern.setObjectName("frontPattern")
        self.widget = QtWidgets.QWidget(self.frontPattern)
        self.widget.setGeometry(QtCore.QRect(0, 0, 801, 251))
        self.widget.setObjectName("widget")
        self.frontPatternLayout = QtWidgets.QHBoxLayout(self.widget)
        self.frontPatternLayout.setContentsMargins(0, 0, 0, 0)
        self.frontPatternLayout.setObjectName("frontPatternLayout")
        self.patternButtonLayout = QtWidgets.QVBoxLayout()
        self.patternButtonLayout.setSpacing(0)
        self.patternButtonLayout.setObjectName("patternButtonLayout")
        self.frontStaticButton = QtWidgets.QRadioButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frontStaticButton.sizePolicy().hasHeightForWidth())
        self.frontStaticButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.frontStaticButton.setFont(font)
        self.frontStaticButton.setStyleSheet("QRadioButton{color: #000000}\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px}\n"
"QRadioButton::indicator:checked{border: 10px solid #61136E; width: 10px; height: 10px}")
        self.frontStaticButton.setIconSize(QtCore.QSize(16, 15))
        self.frontStaticButton.setChecked(True)
        self.frontStaticButton.setObjectName("frontStaticButton")
        self.animationButtons = QtWidgets.QButtonGroup(MainWindow)
        self.animationButtons.setObjectName("animationButtons")
        self.animationButtons.addButton(self.frontStaticButton)
        self.patternButtonLayout.addWidget(self.frontStaticButton)
        self.frontBreatheButton = QtWidgets.QRadioButton(self.widget)
        self.frontBreatheButton.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frontBreatheButton.sizePolicy().hasHeightForWidth())
        self.frontBreatheButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.frontBreatheButton.setFont(font)
        self.frontBreatheButton.setStyleSheet("QRadioButton{color: #000000}\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px}\n"
"QRadioButton::indicator:checked{border: 10px solid #61136E; width: 10px; height: 10px}")
        self.frontBreatheButton.setChecked(False)
        self.frontBreatheButton.setObjectName("frontBreatheButton")
        self.animationButtons.addButton(self.frontBreatheButton)
        self.patternButtonLayout.addWidget(self.frontBreatheButton)
        self.frontSolidSpinButton = QtWidgets.QRadioButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frontSolidSpinButton.sizePolicy().hasHeightForWidth())
        self.frontSolidSpinButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.frontSolidSpinButton.setFont(font)
        self.frontSolidSpinButton.setStyleSheet("QRadioButton{color: #000000}\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px}\n"
"QRadioButton::indicator:checked{border: 10px solid #61136E; width: 10px; height: 10px}")
        self.frontSolidSpinButton.setObjectName("frontSolidSpinButton")
        self.animationButtons.addButton(self.frontSolidSpinButton)
        self.patternButtonLayout.addWidget(self.frontSolidSpinButton)
        self.frontFadeSpinButton = QtWidgets.QRadioButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frontFadeSpinButton.sizePolicy().hasHeightForWidth())
        self.frontFadeSpinButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.frontFadeSpinButton.setFont(font)
        self.frontFadeSpinButton.setStyleSheet("QRadioButton{color: #000000}\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px}\n"
"QRadioButton::indicator:checked{border: 10px solid #61136E; width: 10px; height: 10px}")
        self.frontFadeSpinButton.setObjectName("frontFadeSpinButton")
        self.animationButtons.addButton(self.frontFadeSpinButton)
        self.patternButtonLayout.addWidget(self.frontFadeSpinButton)
        self.frontRainbowButton = QtWidgets.QRadioButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frontRainbowButton.sizePolicy().hasHeightForWidth())
        self.frontRainbowButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.frontRainbowButton.setFont(font)
        self.frontRainbowButton.setStyleSheet("QRadioButton{color: #000000}\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px}\n"
"QRadioButton::indicator:checked{border: 10px solid #61136E; width: 10px; height: 10px}")
        self.frontRainbowButton.setObjectName("frontRainbowButton")
        self.animationButtons.addButton(self.frontRainbowButton)
        self.patternButtonLayout.addWidget(self.frontRainbowButton)
        self.spinButtons = QtWidgets.QHBoxLayout()
        self.spinButtons.setSpacing(0)
        self.spinButtons.setObjectName("spinButtons")
        self.spinCLW = QtWidgets.QPushButton(self.widget)
        self.spinCLW.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.spinCLW.sizePolicy().hasHeightForWidth())
        self.spinCLW.setSizePolicy(sizePolicy)
        self.spinCLW.setMinimumSize(QtCore.QSize(50, 50))
        font = QtGui.QFont()
        font.setFamily("Wingdings 3")
        font.setPointSize(30)
        self.spinCLW.setFont(font)
        self.spinCLW.setStyleSheet("QPushButton{border: 3px solid #61136E; border-radius: 8px; background-color: #FFFFFF; color: #D6D6D6}")
        self.spinCLW.setCheckable(True)
        self.spinCLW.setChecked(True)
        self.spinCLW.setObjectName("spinCLW")
        self.directionButtons = QtWidgets.QButtonGroup(MainWindow)
        self.directionButtons.setObjectName("directionButtons")
        self.directionButtons.addButton(self.spinCLW)
        self.spinButtons.addWidget(self.spinCLW)
        self.spinCCW = QtWidgets.QPushButton(self.widget)
        self.spinCCW.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.spinCCW.sizePolicy().hasHeightForWidth())
        self.spinCCW.setSizePolicy(sizePolicy)
        self.spinCCW.setMinimumSize(QtCore.QSize(50, 50))
        font = QtGui.QFont()
        font.setFamily("Wingdings 3")
        font.setPointSize(30)
        font.setBold(False)
        font.setUnderline(False)
        font.setWeight(50)
        font.setStrikeOut(False)
        self.spinCCW.setFont(font)
        self.spinCCW.setStyleSheet("QPushButton{border: 3px solid #61136E; border-radius: 8px; background-color: #FFFFFF; color: #D6D6D6}")
        self.spinCCW.setCheckable(True)
        self.spinCCW.setObjectName("spinCCW")
        self.directionButtons.addButton(self.spinCCW)
        self.spinButtons.addWidget(self.spinCCW)
        self.patternButtonLayout.addLayout(self.spinButtons)
        self.frontPatternLayout.addLayout(self.patternButtonLayout)
        self.animationTimeLayout = QtWidgets.QVBoxLayout()
        self.animationTimeLayout.setObjectName("animationTimeLayout")
        self.ANIMATION = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ANIMATION.sizePolicy().hasHeightForWidth())
        self.ANIMATION.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.ANIMATION.setFont(font)
        self.ANIMATION.setStyleSheet("color: #d6d6d6")
        self.ANIMATION.setAlignment(QtCore.Qt.AlignCenter)
        self.ANIMATION.setObjectName("ANIMATION")
        self.animationTimeLayout.addWidget(self.ANIMATION)
        self.timeDial = QtWidgets.QDial(self.widget)
        self.timeDial.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.timeDial.sizePolicy().hasHeightForWidth())
        self.timeDial.setSizePolicy(sizePolicy)
        self.timeDial.setMinimum(5)
        self.timeDial.setMaximum(30)
        self.timeDial.setSingleStep(1)
        self.timeDial.setPageStep(5)
        self.timeDial.setProperty("value", 5)
        self.timeDial.setNotchesVisible(True)
        self.timeDial.setObjectName("timeDial")
        self.animationTimeLayout.addWidget(self.timeDial)
        self.timeLabel = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.timeLabel.sizePolicy().hasHeightForWidth())
        self.timeLabel.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.timeLabel.setFont(font)
        self.timeLabel.setStyleSheet("color: #d6d6d6")
        self.timeLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.timeLabel.setObjectName("timeLabel")
        self.animationTimeLayout.addWidget(self.timeLabel)
        self.frontPatternLayout.addLayout(self.animationTimeLayout)
        self.countLayout = QtWidgets.QVBoxLayout()
        self.countLayout.setSpacing(0)
        self.countLayout.setObjectName("countLayout")
        self.COUNT = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.COUNT.sizePolicy().hasHeightForWidth())
        self.COUNT.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.COUNT.setFont(font)
        self.COUNT.setStyleSheet("color: #000000")
        self.COUNT.setAlignment(QtCore.Qt.AlignCenter)
        self.COUNT.setObjectName("COUNT")
        self.countLayout.addWidget(self.COUNT)
        self.button1 = QtWidgets.QRadioButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button1.sizePolicy().hasHeightForWidth())
        self.button1.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.button1.setFont(font)
        self.button1.setStyleSheet("QRadioButton{color: #000000}\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 12px; background-color: #FFFFFF; width: 18px; height: 18px; margin-left: 5px; margin-right: 5px}\n"
"QRadioButton::indicator:checked{border: 8px solid #61136E; width: 8px; height: 8px}")
        self.button1.setChecked(False)
        self.button1.setObjectName("button1")
        self.countButtons = QtWidgets.QButtonGroup(MainWindow)
        self.countButtons.setObjectName("countButtons")
        self.countButtons.addButton(self.button1)
        self.countLayout.addWidget(self.button1)
        self.button2 = QtWidgets.QRadioButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button2.sizePolicy().hasHeightForWidth())
        self.button2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.button2.setFont(font)
        self.button2.setStyleSheet("QRadioButton{color: #000000}\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 12px; background-color: #FFFFFF; width: 18px; height: 18px; margin-left: 5px; margin-right: 5px}\n"
"QRadioButton::indicator:checked{border: 8px solid #61136E; width: 8px; height: 8px}")
        self.button2.setChecked(False)
        self.button2.setObjectName("button2")
        self.countButtons.addButton(self.button2)
        self.countLayout.addWidget(self.button2)
        self.button3 = QtWidgets.QRadioButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button3.sizePolicy().hasHeightForWidth())
        self.button3.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.button3.setFont(font)
        self.button3.setStyleSheet("QRadioButton{color: #000000}\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 12px; background-color: #FFFFFF; width: 18px; height: 18px; margin-left: 5px; margin-right: 5px}\n"
"QRadioButton::indicator:checked{border: 8px solid #61136E; width: 8px; height: 8px}")
        self.button3.setChecked(False)
        self.button3.setObjectName("button3")
        self.countButtons.addButton(self.button3)
        self.countLayout.addWidget(self.button3)
        self.button4 = QtWidgets.QRadioButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button4.sizePolicy().hasHeightForWidth())
        self.button4.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.button4.setFont(font)
        self.button4.setStyleSheet("QRadioButton{color: #000000}\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 12px; background-color: #FFFFFF; width: 18px; height: 18px; margin-left: 5px; margin-right: 5px}\n"
"QRadioButton::indicator:checked{border: 8px solid #61136E; width: 8px; height: 8px}")
        self.button4.setObjectName("button4")
        self.countButtons.addButton(self.button4)
        self.countLayout.addWidget(self.button4)
        self.button6 = QtWidgets.QRadioButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button6.sizePolicy().hasHeightForWidth())
        self.button6.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.button6.setFont(font)
        self.button6.setStyleSheet("QRadioButton{color: #000000}\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 12px; background-color: #FFFFFF; width: 18px; height: 18px; margin-left: 5px; margin-right: 5px}\n"
"QRadioButton::indicator:checked{border: 8px solid #61136E; width: 8px; height: 8px}")
        self.button6.setChecked(False)
        self.button6.setObjectName("button6")
        self.countButtons.addButton(self.button6)
        self.countLayout.addWidget(self.button6)
        self.button8 = QtWidgets.QRadioButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button8.sizePolicy().hasHeightForWidth())
        self.button8.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.button8.setFont(font)
        self.button8.setStyleSheet("QRadioButton{color: #000000}\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 12px; background-color: #FFFFFF; width: 18px; height: 18px; margin-left: 5px; margin-right: 5px}\n"
"QRadioButton::indicator:checked{border: 8px solid #61136E; width: 8px; height: 8px}")
        self.button8.setObjectName("button8")
        self.countButtons.addButton(self.button8)
        self.countLayout.addWidget(self.button8)
        self.button12 = QtWidgets.QRadioButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button12.sizePolicy().hasHeightForWidth())
        self.button12.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.button12.setFont(font)
        self.button12.setStyleSheet("QRadioButton{color: #000000}\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 12px; background-color: #FFFFFF; width: 18px; height: 18px; margin-left: 5px; margin-right: 5px}\n"
"QRadioButton::indicator:checked{border: 8px solid #61136E; width: 8px; height: 8px}")
        self.button12.setObjectName("button12")
        self.countButtons.addButton(self.button12)
        self.countLayout.addWidget(self.button12)
        self.button24 = QtWidgets.QRadioButton(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button24.sizePolicy().hasHeightForWidth())
        self.button24.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.button24.setFont(font)
        self.button24.setStyleSheet("QRadioButton{color: #000000}\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 12px; background-color: #FFFFFF; width: 18px; height: 18px; margin-left: 5px; margin-right: 5px}\n"
"QRadioButton::indicator:checked{border: 8px solid #61136E; width: 8px; height: 8px}")
        self.button24.setChecked(True)
        self.button24.setObjectName("button24")
        self.countButtons.addButton(self.button24)
        self.countLayout.addWidget(self.button24)
        self.frontPatternLayout.addLayout(self.countLayout)
        self.arrangementLayout = QtWidgets.QVBoxLayout()
        self.arrangementLayout.setSpacing(0)
        self.arrangementLayout.setObjectName("arrangementLayout")
        self.centeredSquareDisplay = QtWidgets.QHBoxLayout()
        self.centeredSquareDisplay.setObjectName("centeredSquareDisplay")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.centeredSquareDisplay.addItem(spacerItem)
        self.layoutImage = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.layoutImage.sizePolicy().hasHeightForWidth())
        self.layoutImage.setSizePolicy(sizePolicy)
        self.layoutImage.setMinimumSize(QtCore.QSize(200, 200))
        self.layoutImage.setStyleSheet("")
        self.layoutImage.setText("")
        self.layoutImage.setObjectName("layoutImage")
        self.centeredSquareDisplay.addWidget(self.layoutImage)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.centeredSquareDisplay.addItem(spacerItem1)
        self.arrangementLayout.addLayout(self.centeredSquareDisplay)
        self.centeredCheckBox = QtWidgets.QHBoxLayout()
        self.centeredCheckBox.setSpacing(0)
        self.centeredCheckBox.setObjectName("centeredCheckBox")
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.centeredCheckBox.addItem(spacerItem2)
        self.altLayoutCheckBox = QtWidgets.QCheckBox(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.altLayoutCheckBox.sizePolicy().hasHeightForWidth())
        self.altLayoutCheckBox.setSizePolicy(sizePolicy)
        self.altLayoutCheckBox.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.altLayoutCheckBox.setFont(font)
        self.altLayoutCheckBox.setStyleSheet("QCheckBox{spacing: 10px; color: #000000}\n"
"QCheckBox::indicator{border: 3px solid #000000; border-radius: 6px; background-color: #FFFFFF; width: 20px; height: 20px}\n"
"QCheckBox::indicator:checked{image: url(checkmark.png)}")
        self.altLayoutCheckBox.setObjectName("altLayoutCheckBox")
        self.centeredCheckBox.addWidget(self.altLayoutCheckBox)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.centeredCheckBox.addItem(spacerItem3)
        self.arrangementLayout.addLayout(self.centeredCheckBox)
        self.frontPatternLayout.addLayout(self.arrangementLayout)
        self.toolBox.addItem(self.frontPattern, "")
        self.frontColor = QtWidgets.QWidget()
        self.frontColor.setGeometry(QtCore.QRect(0, 0, 800, 252))
        self.frontColor.setObjectName("frontColor")
        self.layoutWidget = QtWidgets.QWidget(self.frontColor)
        self.layoutWidget.setGeometry(QtCore.QRect(0, 0, 801, 251))
        self.layoutWidget.setObjectName("layoutWidget")
        self.fronColorLayout = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.fronColorLayout.setContentsMargins(0, 0, 0, 0)
        self.fronColorLayout.setSpacing(10)
        self.fronColorLayout.setObjectName("fronColorLayout")
        self.colorButtonLayout = QtWidgets.QVBoxLayout()
        self.colorButtonLayout.setContentsMargins(5, -1, 0, -1)
        self.colorButtonLayout.setSpacing(0)
        self.colorButtonLayout.setObjectName("colorButtonLayout")
        self.singleButton = QtWidgets.QRadioButton(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.singleButton.sizePolicy().hasHeightForWidth())
        self.singleButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.singleButton.setFont(font)
        self.singleButton.setStyleSheet("QRadioButton{color: #000000}\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px}\n"
"QRadioButton::indicator:checked{border: 10px solid #61136E; width: 10px; height: 10px}")
        self.singleButton.setChecked(True)
        self.singleButton.setObjectName("singleButton")
        self.colorButtons = QtWidgets.QButtonGroup(MainWindow)
        self.colorButtons.setObjectName("colorButtons")
        self.colorButtons.addButton(self.singleButton)
        self.colorButtonLayout.addWidget(self.singleButton)
        self.rainbowButton = QtWidgets.QRadioButton(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rainbowButton.sizePolicy().hasHeightForWidth())
        self.rainbowButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rainbowButton.setFont(font)
        self.rainbowButton.setStyleSheet("QRadioButton{color: #000000}\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px}\n"
"QRadioButton::indicator:checked{border: 10px solid #61136E; width: 10px; height: 10px}")
        self.rainbowButton.setObjectName("rainbowButton")
        self.colorButtons.addButton(self.rainbowButton)
        self.colorButtonLayout.addWidget(self.rainbowButton)
        self.rgbButton = QtWidgets.QRadioButton(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rgbButton.sizePolicy().hasHeightForWidth())
        self.rgbButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rgbButton.setFont(font)
        self.rgbButton.setStyleSheet("QRadioButton{color: #000000}\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px}\n"
"QRadioButton::indicator:checked{border: 10px solid #61136E; width: 10px; height: 10px}")
        self.rgbButton.setObjectName("rgbButton")
        self.colorButtons.addButton(self.rgbButton)
        self.colorButtonLayout.addWidget(self.rgbButton)
        self.ycmButton = QtWidgets.QRadioButton(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ycmButton.sizePolicy().hasHeightForWidth())
        self.ycmButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.ycmButton.setFont(font)
        self.ycmButton.setStyleSheet("QRadioButton{color: #000000}\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px}\n"
"QRadioButton::indicator:checked{border: 10px solid #61136E; width: 10px; height: 10px}")
        self.ycmButton.setObjectName("ycmButton")
        self.colorButtons.addButton(self.ycmButton)
        self.colorButtonLayout.addWidget(self.ycmButton)
        self.rygcbmButton = QtWidgets.QRadioButton(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rygcbmButton.sizePolicy().hasHeightForWidth())
        self.rygcbmButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rygcbmButton.setFont(font)
        self.rygcbmButton.setStyleSheet("QRadioButton{color: #000000}\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px}\n"
"QRadioButton::indicator:checked{border: 10px solid #61136E; width: 10px; height: 10px}")
        self.rygcbmButton.setObjectName("rygcbmButton")
        self.colorButtons.addButton(self.rygcbmButton)
        self.colorButtonLayout.addWidget(self.rygcbmButton)
        self.fronColorLayout.addLayout(self.colorButtonLayout)
        self.colorOptions = QtWidgets.QStackedWidget(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.colorOptions.sizePolicy().hasHeightForWidth())
        self.colorOptions.setSizePolicy(sizePolicy)
        self.colorOptions.setMinimumSize(QtCore.QSize(0, 0))
        self.colorOptions.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.colorOptions.setObjectName("colorOptions")
        self.stepOption = QtWidgets.QWidget()
        self.stepOption.setObjectName("stepOption")
        self.horizontalLayoutWidget_4 = QtWidgets.QWidget(self.stepOption)
        self.horizontalLayoutWidget_4.setGeometry(QtCore.QRect(0, 0, 641, 251))
        self.horizontalLayoutWidget_4.setObjectName("horizontalLayoutWidget_4")
        self.stepLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_4)
        self.stepLayout.setContentsMargins(0, 0, 0, 0)
        self.stepLayout.setSpacing(0)
        self.stepLayout.setObjectName("stepLayout")
        self.STEP = QtWidgets.QLabel(self.horizontalLayoutWidget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.STEP.sizePolicy().hasHeightForWidth())
        self.STEP.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.STEP.setFont(font)
        self.STEP.setStyleSheet("color: #000000")
        self.STEP.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.STEP.setObjectName("STEP")
        self.stepLayout.addWidget(self.STEP)
        self.stepDial = QtWidgets.QDial(self.horizontalLayoutWidget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.stepDial.sizePolicy().hasHeightForWidth())
        self.stepDial.setSizePolicy(sizePolicy)
        self.stepDial.setMinimumSize(QtCore.QSize(300, 0))
        self.stepDial.setMinimum(0)
        self.stepDial.setMaximum(20)
        self.stepDial.setSingleStep(1)
        self.stepDial.setPageStep(2)
        self.stepDial.setProperty("value", 1)
        self.stepDial.setNotchesVisible(True)
        self.stepDial.setObjectName("stepDial")
        self.stepLayout.addWidget(self.stepDial)
        self.stepLabel = QtWidgets.QLabel(self.horizontalLayoutWidget_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.stepLabel.sizePolicy().hasHeightForWidth())
        self.stepLabel.setSizePolicy(sizePolicy)
        self.stepLabel.setMinimumSize(QtCore.QSize(120, 0))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.stepLabel.setFont(font)
        self.stepLabel.setStyleSheet("color: #000000")
        self.stepLabel.setObjectName("stepLabel")
        self.stepLayout.addWidget(self.stepLabel)
        self.colorOptions.addWidget(self.stepOption)
        self.colorOption = QtWidgets.QWidget()
        self.colorOption.setObjectName("colorOption")
        self.layoutWidget_2 = QtWidgets.QWidget(self.colorOption)
        self.layoutWidget_2.setGeometry(QtCore.QRect(0, 0, 641, 251))
        self.layoutWidget_2.setObjectName("layoutWidget_2")
        self.singleLayout = QtWidgets.QHBoxLayout(self.layoutWidget_2)
        self.singleLayout.setContentsMargins(0, 0, 0, 0)
        self.singleLayout.setSpacing(0)
        self.singleLayout.setObjectName("singleLayout")
        self.HUE = QtWidgets.QLabel(self.layoutWidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.HUE.sizePolicy().hasHeightForWidth())
        self.HUE.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.HUE.setFont(font)
        self.HUE.setStyleSheet("color: #000000")
        self.HUE.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.HUE.setObjectName("HUE")
        self.singleLayout.addWidget(self.HUE)
        self.hueDial = QtWidgets.QDial(self.layoutWidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.hueDial.sizePolicy().hasHeightForWidth())
        self.hueDial.setSizePolicy(sizePolicy)
        self.hueDial.setMinimumSize(QtCore.QSize(300, 0))
        self.hueDial.setMaximum(29)
        self.hueDial.setPageStep(5)
        self.hueDial.setWrapping(True)
        self.hueDial.setNotchesVisible(False)
        self.hueDial.setObjectName("hueDial")
        self.singleLayout.addWidget(self.hueDial)
        self.hueLabel = QtWidgets.QLabel(self.layoutWidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.hueLabel.sizePolicy().hasHeightForWidth())
        self.hueLabel.setSizePolicy(sizePolicy)
        self.hueLabel.setMinimumSize(QtCore.QSize(60, 60))
        self.hueLabel.setStyleSheet("border: 2px solid #000000; background-color: hsv(0,255,255)")
        self.hueLabel.setText("")
        self.hueLabel.setObjectName("hueLabel")
        self.singleLayout.addWidget(self.hueLabel)
        spacerItem4 = QtWidgets.QSpacerItem(60, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.singleLayout.addItem(spacerItem4)
        self.colorOptions.addWidget(self.colorOption)
        self.fronColorLayout.addWidget(self.colorOptions)
        self.toolBox.addItem(self.frontColor, "")
        self.tabWidget.addTab(self.led, "")
        self.data = QtWidgets.QWidget()
        self.data.setStyleSheet("")
        self.data.setObjectName("data")
        self.tabWidget.addTab(self.data, "")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(1)
        self.toolBox.setCurrentIndex(2)
        self.toolBox.layout().setSpacing(-1)
        self.colorOptions.setCurrentIndex(0)
        self.leftRedSlider.valueChanged['int'].connect(self.leftRedValue.setNum)
        self.leftGreenSlider.valueChanged['int'].connect(self.leftGreenValue.setNum)
        self.leftBlueSlider.valueChanged['int'].connect(self.leftBlueValue.setNum)
        self.rightRedSlider.valueChanged['int'].connect(self.rightRedValue.setNum)
        self.rightGreenSlider.valueChanged['int'].connect(self.rightGreenValue.setNum)
        self.rightBlueSlider.valueChanged['int'].connect(self.rightBlueValue.setNum)
        self.leftCycleButton.toggled['bool'].connect(self.leftRedSlider.setDisabled)
        self.leftCycleButton.toggled['bool'].connect(self.leftGreenSlider.setDisabled)
        self.leftCycleButton.toggled['bool'].connect(self.leftBlueSlider.setDisabled)
        self.rightCycleButton.clicked['bool'].connect(self.rightRedSlider.setDisabled)
        self.rightCycleButton.toggled['bool'].connect(self.rightGreenSlider.setDisabled)
        self.rightCycleButton.toggled['bool'].connect(self.rightBlueSlider.setDisabled)
        self.rightStaticButton.toggled['bool'].connect(self.rightDial.setDisabled)
        self.leftStaticButton.toggled['bool'].connect(self.leftDial.setDisabled)
        self.frontStaticButton.clicked['bool'].connect(self.spinCLW.setDisabled)
        self.frontStaticButton.clicked['bool'].connect(self.spinCCW.setDisabled)
        self.frontBreatheButton.clicked['bool'].connect(self.spinCLW.setDisabled)
        self.frontBreatheButton.clicked['bool'].connect(self.spinCCW.setDisabled)
        self.frontSolidSpinButton.clicked['bool'].connect(self.spinCLW.setEnabled)
        self.frontFadeSpinButton.clicked['bool'].connect(self.spinCLW.setEnabled)
        self.frontRainbowButton.clicked['bool'].connect(self.spinCLW.setEnabled)
        self.frontSolidSpinButton.clicked['bool'].connect(self.spinCCW.setEnabled)
        self.frontFadeSpinButton.clicked['bool'].connect(self.spinCCW.setEnabled)
        self.frontRainbowButton.clicked['bool'].connect(self.spinCCW.setEnabled)
        self.frontStaticButton.clicked['bool'].connect(self.button12.setEnabled)
        self.frontBreatheButton.clicked['bool'].connect(self.button12.setEnabled)
        self.frontSolidSpinButton.clicked['bool'].connect(self.button12.setDisabled)
        self.frontFadeSpinButton.clicked['bool'].connect(self.button12.setDisabled)
        self.frontRainbowButton.toggled['bool'].connect(self.button2.setDisabled)
        self.frontRainbowButton.toggled['bool'].connect(self.button3.setDisabled)
        self.frontRainbowButton.toggled['bool'].connect(self.button4.setDisabled)
        self.frontRainbowButton.toggled['bool'].connect(self.button6.setDisabled)
        self.frontRainbowButton.toggled['bool'].connect(self.button8.setDisabled)
        self.frontRainbowButton.clicked['bool'].connect(self.button12.setDisabled)
        self.frontStaticButton.clicked['bool'].connect(self.button24.setEnabled)
        self.frontBreatheButton.clicked['bool'].connect(self.button24.setEnabled)
        self.frontSolidSpinButton.clicked['bool'].connect(self.button24.setDisabled)
        self.frontFadeSpinButton.clicked['bool'].connect(self.button24.setDisabled)
        self.frontRainbowButton.clicked['bool'].connect(self.button24.setEnabled)
        self.frontRainbowButton.clicked['bool'].connect(self.button24.setChecked)
        self.frontRainbowButton.toggled['bool'].connect(self.singleButton.setDisabled)
        self.frontRainbowButton.toggled['bool'].connect(self.rainbowButton.setDisabled)
        self.frontRainbowButton.toggled['bool'].connect(self.ycmButton.setDisabled)
        self.frontRainbowButton.toggled['bool'].connect(self.rygcbmButton.setDisabled)
        self.frontStaticButton.toggled['bool'].connect(self.timeDial.setDisabled)
        self.frontStaticButton.clicked['bool'].connect(self.button1.setDisabled)
        self.frontBreatheButton.clicked['bool'].connect(self.button1.setDisabled)
        self.frontSolidSpinButton.clicked['bool'].connect(self.button1.setEnabled)
        self.frontFadeSpinButton.clicked['bool'].connect(self.button1.setEnabled)
        self.frontRainbowButton.clicked['bool'].connect(self.button1.setDisabled)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.semiButton.setText(_translate("MainWindow", "Semi-Auto"))
        self.burstButton.setText(_translate("MainWindow", "BuRst: 3"))
        self.autoButton.setText(_translate("MainWindow", "AutomAtic"))
        self.FPSupButton.setText(_translate("MainWindow", "5"))
        self.FPSdownButton.setText(_translate("MainWindow", "6"))
        self.FPS.setText(_translate("MainWindow", "fPS"))
        self.AMMO.setText(_translate("MainWindow", "AMMO"))
        self.ROCKETPRESSURE.setText(_translate("MainWindow", "Rocket PRessuRe"))
        self.PSIdownButton.setText(_translate("MainWindow", "6"))
        self.PSIupButton.setText(_translate("MainWindow", "5"))
        self.laserButton.setText(_translate("MainWindow", "lAseR"))
        self.lightButton.setText(_translate("MainWindow", "flAshlight"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.status), _translate("MainWindow", "stAtus"))
        self.leftGreenValue.setText(_translate("MainWindow", "0"))
        self.leftSTYLE.setText(_translate("MainWindow", "AnimAtion style"))
        self.leftRedLabel.setText(_translate("MainWindow", "ReD"))
        self.leftRedValue.setText(_translate("MainWindow", "0"))
        self.leftGreenLabel.setText(_translate("MainWindow", "gReen"))
        self.leftBlueLabel.setText(_translate("MainWindow", "Blue"))
        self.leftStaticButton.setText(_translate("MainWindow", "stAtic"))
        self.leftBreatheButton.setText(_translate("MainWindow", "BReAthe"))
        self.leftCycleButton.setText(_translate("MainWindow", "cycle"))
        self.leftBlueValue.setText(_translate("MainWindow", "0"))
        self.leftCYCLE.setText(_translate("MainWindow", "AnimAtion time: 1 sec"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.leftSide), _translate("MainWindow", " left siDe"))
        self.rightRedLabel.setText(_translate("MainWindow", "ReD"))
        self.rightGreenValue.setText(_translate("MainWindow", "0"))
        self.rightStaticButton.setText(_translate("MainWindow", "stAtic"))
        self.rightBreatheButton.setText(_translate("MainWindow", "BReAthe"))
        self.rightCycleButton.setText(_translate("MainWindow", "cycle"))
        self.rightCYCLE.setText(_translate("MainWindow", "AnimAtion time: 1 sec"))
        self.rightBlueLabel.setText(_translate("MainWindow", "Blue"))
        self.rightBlueValue.setText(_translate("MainWindow", "0"))
        self.rightRedValue.setText(_translate("MainWindow", "0"))
        self.rightSTYLE.setText(_translate("MainWindow", "AnimAtion style"))
        self.rightGreenLabel.setText(_translate("MainWindow", "gReen"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.rightSide), _translate("MainWindow", " Right siDe"))
        self.frontStaticButton.setText(_translate("MainWindow", "stAtic"))
        self.frontBreatheButton.setText(_translate("MainWindow", "BReAthe"))
        self.frontSolidSpinButton.setText(_translate("MainWindow", "soliD sPin"))
        self.frontFadeSpinButton.setText(_translate("MainWindow", "fADe sPin"))
        self.frontRainbowButton.setText(_translate("MainWindow", "RAinBow sPin"))
        self.spinCLW.setText(_translate("MainWindow", ""))
        self.spinCCW.setText(_translate("MainWindow", ""))
        self.ANIMATION.setText(_translate("MainWindow", "AnimAtion time"))
        self.timeLabel.setText(_translate("MainWindow", "5 sec"))
        self.COUNT.setText(_translate("MainWindow", "count"))
        self.button1.setText(_translate("MainWindow", "1"))
        self.button2.setText(_translate("MainWindow", "2"))
        self.button3.setText(_translate("MainWindow", "3"))
        self.button4.setText(_translate("MainWindow", "4"))
        self.button6.setText(_translate("MainWindow", "6"))
        self.button8.setText(_translate("MainWindow", "8"))
        self.button12.setText(_translate("MainWindow", "12"))
        self.button24.setText(_translate("MainWindow", "24"))
        self.altLayoutCheckBox.setText(_translate("MainWindow", "AlteRnAte lAyout"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.frontPattern), _translate("MainWindow", " fRont PAtteRn"))
        self.singleButton.setText(_translate("MainWindow", "single"))
        self.rainbowButton.setText(_translate("MainWindow", "RAinBow"))
        self.rgbButton.setText(_translate("MainWindow", "RgB"))
        self.ycmButton.setText(_translate("MainWindow", "ycm"))
        self.rygcbmButton.setText(_translate("MainWindow", "RygcBm"))
        self.STEP.setText(_translate("MainWindow", "coloR steP time:"))
        self.stepLabel.setText(_translate("MainWindow", "0.5 sec"))
        self.HUE.setText(_translate("MainWindow", "leD coloR:"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.frontColor), _translate("MainWindow", " fRont coloR"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.led), _translate("MainWindow", "LeD settings"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.data), _translate("MainWindow", "DAtA logs"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
