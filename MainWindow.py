# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 480)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("background: #FFFFFF;")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setAutoFillBackground(False)
        self.centralwidget.setObjectName("centralwidget")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 800, 480))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.tabWidget.setFont(font)
        self.tabWidget.setAutoFillBackground(False)
        self.tabWidget.setStyleSheet("QTabWidget::pane { /* The tab widget frame */\n"
"    border-top: 4px solid #61136E;\n"
"    margin-top: -2px;\n"
"}\n"
"\n"
"QTabWidget::tab-bar {\n"
"    left: 5px; /* move to the right by 5px */\n"
"}\n"
"\n"
"/* Style the tab using the tab sub-control. Note that\n"
"    it reads QTabBar _not_ QTabWidget */\n"
"QTabBar::tab {\n"
"    border: 2px solid #61136E;\n"
"    border-top-left-radius: 4px;\n"
"    border-top-right-radius: 4px;\n"
"    padding-top: 3px;\n"
"    padding-bottom: 3px;\n"
"    padding-left: 10px;\n"
"    padding-right: 10px;\n"
"}\n"
"\n"
"QTabBar::tab:selected {\n"
"    background: #61136E;\n"
"    color: #FFFFFF;\n"
"}\n"
"\n"
"QTabBar::tab:!selected {\n"
"    margin-top: 2px; /* make non-selected tabs look smaller */\n"
"    color: #000000\n"
"}x")
        self.tabWidget.setObjectName("tabWidget")
        self.status = QtWidgets.QWidget()
        self.status.setStyleSheet("")
        self.status.setObjectName("status")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.status)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(0, 220, 801, 52))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.modeButtonLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.modeButtonLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.modeButtonLayout.setContentsMargins(0, 0, 0, 0)
        self.modeButtonLayout.setSpacing(0)
        self.modeButtonLayout.setObjectName("modeButtonLayout")
        self.semiButton = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.semiButton.sizePolicy().hasHeightForWidth())
        self.semiButton.setSizePolicy(sizePolicy)
        self.semiButton.setMinimumSize(QtCore.QSize(175, 50))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.semiButton.setFont(font)
        self.semiButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:checked {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.semiButton.setCheckable(True)
        self.semiButton.setChecked(True)
        self.semiButton.setAutoExclusive(True)
        self.semiButton.setFlat(False)
        self.semiButton.setObjectName("semiButton")
        self.modeButtons = QtWidgets.QButtonGroup(MainWindow)
        self.modeButtons.setObjectName("modeButtons")
        self.modeButtons.addButton(self.semiButton)
        self.modeButtonLayout.addWidget(self.semiButton)
        self.burstButton = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.burstButton.sizePolicy().hasHeightForWidth())
        self.burstButton.setSizePolicy(sizePolicy)
        self.burstButton.setMinimumSize(QtCore.QSize(175, 50))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.burstButton.setFont(font)
        self.burstButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:checked {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.burstButton.setCheckable(True)
        self.burstButton.setChecked(False)
        self.burstButton.setAutoExclusive(True)
        self.burstButton.setFlat(False)
        self.burstButton.setObjectName("burstButton")
        self.modeButtons.addButton(self.burstButton)
        self.modeButtonLayout.addWidget(self.burstButton, 0, QtCore.Qt.AlignVCenter)
        self.autoButton = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.autoButton.sizePolicy().hasHeightForWidth())
        self.autoButton.setSizePolicy(sizePolicy)
        self.autoButton.setMinimumSize(QtCore.QSize(175, 50))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.autoButton.setFont(font)
        self.autoButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:checked {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.autoButton.setCheckable(True)
        self.autoButton.setChecked(False)
        self.autoButton.setAutoExclusive(True)
        self.autoButton.setFlat(False)
        self.autoButton.setObjectName("autoButton")
        self.modeButtons.addButton(self.autoButton)
        self.modeButtonLayout.addWidget(self.autoButton)
        self.burstSlider = QtWidgets.QSlider(self.status)
        self.burstSlider.setGeometry(QtCore.QRect(230, 170, 331, 50))
        self.burstSlider.setStyleSheet("QSlider::groove:horizontal {\n"
"    border: 1px solid #000000;\n"
"    height: 4px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */\n"
"    background: #000000;\n"
"    margin: 5px;\n"
"}\n"
"\n"
"QSlider::handle:horizontal {\n"
"    background: qlineargradient(x1:0, y1:0, x2:1, y2:1, stop:0 #9313a0, stop:1 #2f133c);\n"
"    border: 1px solid #000000;\n"
"    width: 18px;\n"
"    margin: -16px 2px;\n"
"    border-radius: 3px;\n"
"}")
        self.burstSlider.setMinimum(1)
        self.burstSlider.setMaximum(10)
        self.burstSlider.setProperty("value", 3)
        self.burstSlider.setSliderPosition(3)
        self.burstSlider.setTracking(True)
        self.burstSlider.setOrientation(QtCore.Qt.Horizontal)
        self.burstSlider.setInvertedAppearance(False)
        self.burstSlider.setTickPosition(QtWidgets.QSlider.NoTicks)
        self.burstSlider.setTickInterval(1)
        self.burstSlider.setObjectName("burstSlider")
        self.fpsLCD = QtWidgets.QLCDNumber(self.status)
        self.fpsLCD.setGeometry(QtCore.QRect(10, 10, 400, 130))
        self.fpsLCD.setAutoFillBackground(False)
        self.fpsLCD.setStyleSheet("border: 3px solid #61136e;\n"
"border-radius: 8px;\n"
"color: #000000")
        self.fpsLCD.setFrameShape(QtWidgets.QFrame.Box)
        self.fpsLCD.setFrameShadow(QtWidgets.QFrame.Plain)
        self.fpsLCD.setLineWidth(0)
        self.fpsLCD.setSmallDecimalPoint(True)
        self.fpsLCD.setDigitCount(5)
        self.fpsLCD.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.fpsLCD.setProperty("value", 0.0)
        self.fpsLCD.setProperty("intValue", 0)
        self.fpsLCD.setObjectName("fpsLCD")
        self.FPSupButton = QtWidgets.QPushButton(self.status)
        self.FPSupButton.setGeometry(QtCore.QRect(10, 10, 60, 60))
        font = QtGui.QFont()
        font.setFamily("Webdings")
        font.setPointSize(64)
        self.FPSupButton.setFont(font)
        self.FPSupButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    padding-left:4px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.FPSupButton.setObjectName("FPSupButton")
        self.FPSdownButton = QtWidgets.QPushButton(self.status)
        self.FPSdownButton.setGeometry(QtCore.QRect(10, 80, 60, 60))
        font = QtGui.QFont()
        font.setFamily("Webdings")
        font.setPointSize(64)
        self.FPSdownButton.setFont(font)
        self.FPSdownButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    padding-left:4px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.FPSdownButton.setObjectName("FPSdownButton")
        self.ammoLCD = QtWidgets.QLCDNumber(self.status)
        self.ammoLCD.setGeometry(QtCore.QRect(470, 10, 320, 130))
        self.ammoLCD.setAutoFillBackground(False)
        self.ammoLCD.setStyleSheet("border: 3px solid #61136e;\n"
"border-radius: 8px;\n"
"color: #000000")
        self.ammoLCD.setFrameShape(QtWidgets.QFrame.Box)
        self.ammoLCD.setFrameShadow(QtWidgets.QFrame.Plain)
        self.ammoLCD.setLineWidth(0)
        self.ammoLCD.setSmallDecimalPoint(True)
        self.ammoLCD.setDigitCount(3)
        self.ammoLCD.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.ammoLCD.setProperty("value", 0.0)
        self.ammoLCD.setProperty("intValue", 0)
        self.ammoLCD.setObjectName("ammoLCD")
        self.FPS = QtWidgets.QLabel(self.status)
        self.FPS.setGeometry(QtCore.QRect(70, 140, 321, 31))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.FPS.setFont(font)
        self.FPS.setStyleSheet("color: #000000")
        self.FPS.setAlignment(QtCore.Qt.AlignCenter)
        self.FPS.setObjectName("FPS")
        self.AMMO = QtWidgets.QLabel(self.status)
        self.AMMO.setGeometry(QtCore.QRect(470, 140, 321, 31))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.AMMO.setFont(font)
        self.AMMO.setStyleSheet("color: #000000")
        self.AMMO.setAlignment(QtCore.Qt.AlignCenter)
        self.AMMO.setObjectName("AMMO")
        self.psiLCD = QtWidgets.QLCDNumber(self.status)
        self.psiLCD.setGeometry(QtCore.QRect(10, 300, 400, 130))
        self.psiLCD.setAutoFillBackground(False)
        self.psiLCD.setStyleSheet("border: 3px solid #61136e;\n"
"border-radius: 8px;\n"
"color: #000000")
        self.psiLCD.setFrameShadow(QtWidgets.QFrame.Plain)
        self.psiLCD.setLineWidth(0)
        self.psiLCD.setSmallDecimalPoint(True)
        self.psiLCD.setDigitCount(5)
        self.psiLCD.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.psiLCD.setProperty("value", 0.0)
        self.psiLCD.setProperty("intValue", 0)
        self.psiLCD.setObjectName("psiLCD")
        self.ROCKETPRESSURE = QtWidgets.QLabel(self.status)
        self.ROCKETPRESSURE.setGeometry(QtCore.QRect(420, 300, 141, 131))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.ROCKETPRESSURE.setFont(font)
        self.ROCKETPRESSURE.setStyleSheet("color: #000000")
        self.ROCKETPRESSURE.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.ROCKETPRESSURE.setWordWrap(True)
        self.ROCKETPRESSURE.setObjectName("ROCKETPRESSURE")
        self.PSIdownButton = QtWidgets.QPushButton(self.status)
        self.PSIdownButton.setGeometry(QtCore.QRect(10, 370, 60, 60))
        font = QtGui.QFont()
        font.setFamily("Webdings")
        font.setPointSize(64)
        self.PSIdownButton.setFont(font)
        self.PSIdownButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    padding-left:4px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.PSIdownButton.setObjectName("PSIdownButton")
        self.PSIupButton = QtWidgets.QPushButton(self.status)
        self.PSIupButton.setGeometry(QtCore.QRect(10, 300, 60, 60))
        font = QtGui.QFont()
        font.setFamily("Webdings")
        font.setPointSize(64)
        self.PSIupButton.setFont(font)
        self.PSIupButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    padding-left:4px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.PSIupButton.setObjectName("PSIupButton")
        self.laserButton = QtWidgets.QPushButton(self.status)
        self.laserButton.setGeometry(QtCore.QRect(610, 300, 181, 50))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.laserButton.sizePolicy().hasHeightForWidth())
        self.laserButton.setSizePolicy(sizePolicy)
        self.laserButton.setMinimumSize(QtCore.QSize(175, 50))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.laserButton.setFont(font)
        self.laserButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:checked {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.laserButton.setCheckable(True)
        self.laserButton.setChecked(False)
        self.laserButton.setAutoExclusive(False)
        self.laserButton.setFlat(False)
        self.laserButton.setObjectName("laserButton")
        self.lightButton = QtWidgets.QPushButton(self.status)
        self.lightButton.setGeometry(QtCore.QRect(610, 380, 181, 50))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lightButton.sizePolicy().hasHeightForWidth())
        self.lightButton.setSizePolicy(sizePolicy)
        self.lightButton.setMinimumSize(QtCore.QSize(175, 50))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(24)
        self.lightButton.setFont(font)
        self.lightButton.setStyleSheet("QPushButton {\n"
"    border: 3px solid #61136E;\n"
"    border-radius: 8px;\n"
"    background-color: #FFFFFF;\n"
"    color: #000000;\n"
"}\n"
"\n"
"QPushButton:checked {\n"
"    background-color: #61136E;\n"
"    color: #FFFFFF;\n"
"}")
        self.lightButton.setCheckable(True)
        self.lightButton.setChecked(False)
        self.lightButton.setAutoExclusive(False)
        self.lightButton.setFlat(False)
        self.lightButton.setObjectName("lightButton")
        self.tabWidget.addTab(self.status, "")
        self.led = QtWidgets.QWidget()
        self.led.setStyleSheet("")
        self.led.setObjectName("led")
        self.toolBox = QtWidgets.QToolBox(self.led)
        self.toolBox.setGeometry(QtCore.QRect(0, 3, 800, 430))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.toolBox.setFont(font)
        self.toolBox.setStyleSheet("QToolBox::tab {\n"
"    color: #000000\n"
"}\n"
"\n"
"QToolBox::tab:selected {\n"
"    color: #61136E\n"
"}")
        self.toolBox.setObjectName("toolBox")
        self.leftSide = QtWidgets.QWidget()
        self.leftSide.setGeometry(QtCore.QRect(0, 0, 800, 262))
        self.leftSide.setObjectName("leftSide")
        self.gridLayoutWidget = QtWidgets.QWidget(self.leftSide)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(0, 0, 821, 261))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.leftGrid = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.leftGrid.setContentsMargins(0, 0, 0, 0)
        self.leftGrid.setHorizontalSpacing(4)
        self.leftGrid.setVerticalSpacing(3)
        self.leftGrid.setObjectName("leftGrid")
        self.leftGreenValue = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftGreenValue.setFont(font)
        self.leftGreenValue.setStyleSheet("color: #d6d6d6")
        self.leftGreenValue.setAlignment(QtCore.Qt.AlignCenter)
        self.leftGreenValue.setObjectName("leftGreenValue")
        self.leftGrid.addWidget(self.leftGreenValue, 2, 1, 1, 1)
        self.leftSTYLE = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftSTYLE.setFont(font)
        self.leftSTYLE.setStyleSheet("color: #000000")
        self.leftSTYLE.setAlignment(QtCore.Qt.AlignCenter)
        self.leftSTYLE.setObjectName("leftSTYLE")
        self.leftGrid.addWidget(self.leftSTYLE, 0, 4, 1, 1)
        self.leftRED = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftRED.setFont(font)
        self.leftRED.setStyleSheet("color: #d6d6d6")
        self.leftRED.setAlignment(QtCore.Qt.AlignCenter)
        self.leftRED.setObjectName("leftRED")
        self.leftGrid.addWidget(self.leftRED, 0, 0, 1, 1)
        self.leftRedValue = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftRedValue.setFont(font)
        self.leftRedValue.setStyleSheet("color: #d6d6d6")
        self.leftRedValue.setAlignment(QtCore.Qt.AlignCenter)
        self.leftRedValue.setObjectName("leftRedValue")
        self.leftGrid.addWidget(self.leftRedValue, 2, 0, 1, 1)
        self.leftGreenSlider = QtWidgets.QSlider(self.gridLayoutWidget)
        self.leftGreenSlider.setEnabled(False)
        self.leftGreenSlider.setMinimumSize(QtCore.QSize(90, 0))
        self.leftGreenSlider.setStyleSheet("QSlider::groove:vertical {\n"
"    border: 1px solid #d6d6d6;\n"
"    width: 4px;\n"
"    background: #d6d6d6;\n"
"    margin: 5px;\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"    background: #ffffff;\n"
"    border: 1px solid #d6d6d6;\n"
"    height: 18px;\n"
"    margin: 2px -20px;\n"
"    border-radius: 3px;\n"
"}")
        self.leftGreenSlider.setMaximum(255)
        self.leftGreenSlider.setPageStep(16)
        self.leftGreenSlider.setOrientation(QtCore.Qt.Vertical)
        self.leftGreenSlider.setObjectName("leftGreenSlider")
        self.leftGrid.addWidget(self.leftGreenSlider, 1, 1, 1, 1)
        self.leftGREEN = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftGREEN.setFont(font)
        self.leftGREEN.setStyleSheet("color: #d6d6d6")
        self.leftGREEN.setAlignment(QtCore.Qt.AlignCenter)
        self.leftGREEN.setObjectName("leftGREEN")
        self.leftGrid.addWidget(self.leftGREEN, 0, 1, 1, 1)
        self.leftBlueSlider = QtWidgets.QSlider(self.gridLayoutWidget)
        self.leftBlueSlider.setEnabled(False)
        self.leftBlueSlider.setMinimumSize(QtCore.QSize(90, 0))
        self.leftBlueSlider.setStyleSheet("QSlider::groove:vertical {\n"
"    border: 1px solid #d6d6d6;\n"
"    width: 4px;\n"
"    background: #d6d6d6;\n"
"    margin: 5px;\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"    background: #ffffff;\n"
"    border: 1px solid #d6d6d6;\n"
"    height: 18px;\n"
"    margin: 2px -20px;\n"
"    border-radius: 3px;\n"
"}")
        self.leftBlueSlider.setMaximum(255)
        self.leftBlueSlider.setPageStep(16)
        self.leftBlueSlider.setOrientation(QtCore.Qt.Vertical)
        self.leftBlueSlider.setObjectName("leftBlueSlider")
        self.leftGrid.addWidget(self.leftBlueSlider, 1, 2, 1, 1)
        self.leftBLUE = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftBLUE.setFont(font)
        self.leftBLUE.setStyleSheet("color: #d6d6d6")
        self.leftBLUE.setAlignment(QtCore.Qt.AlignCenter)
        self.leftBLUE.setObjectName("leftBLUE")
        self.leftGrid.addWidget(self.leftBLUE, 0, 2, 1, 1)
        self.leftColor = QtWidgets.QLabel(self.gridLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.leftColor.sizePolicy().hasHeightForWidth())
        self.leftColor.setSizePolicy(sizePolicy)
        self.leftColor.setMinimumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftColor.setFont(font)
        self.leftColor.setStyleSheet("border: 2px solid #000000;\n"
"color: #000000;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(255, 0, 0, 255), stop:0.166 rgba(255, 255, 0, 255), stop:0.333 rgba(0, 255, 0, 255), stop:0.5 rgba(0, 255, 255, 255), stop:0.666 rgba(0, 0, 255, 255), stop:0.833 rgba(255, 0, 255, 255), stop:1 rgba(255, 0, 0, 255));")
        self.leftColor.setText("")
        self.leftColor.setAlignment(QtCore.Qt.AlignCenter)
        self.leftColor.setIndent(-1)
        self.leftColor.setObjectName("leftColor")
        self.leftGrid.addWidget(self.leftColor, 1, 3, 1, 1)
        self.leftRedSlider = QtWidgets.QSlider(self.gridLayoutWidget)
        self.leftRedSlider.setEnabled(False)
        self.leftRedSlider.setMinimumSize(QtCore.QSize(90, 0))
        self.leftRedSlider.setStyleSheet("QSlider::groove:vertical {\n"
"    border: 1px solid #d6d6d6;\n"
"    width: 4px;\n"
"    background: #d6d6d6;\n"
"    margin: 5px;\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"    background: #ffffff;\n"
"    border: 1px solid #d6d6d6;\n"
"    height: 18px;\n"
"    margin: 2px -20px;\n"
"    border-radius: 3px;\n"
"}")
        self.leftRedSlider.setMaximum(255)
        self.leftRedSlider.setPageStep(16)
        self.leftRedSlider.setOrientation(QtCore.Qt.Vertical)
        self.leftRedSlider.setObjectName("leftRedSlider")
        self.leftGrid.addWidget(self.leftRedSlider, 1, 0, 1, 1)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.leftButtonLayout = QtWidgets.QHBoxLayout()
        self.leftButtonLayout.setSpacing(0)
        self.leftButtonLayout.setObjectName("leftButtonLayout")
        self.leftStaticButton = QtWidgets.QRadioButton(self.gridLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.leftStaticButton.sizePolicy().hasHeightForWidth())
        self.leftStaticButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftStaticButton.setFont(font)
        self.leftStaticButton.setStyleSheet("QRadioButton{color: #000000;}\n"
"\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px;}\n"
"\n"
"QRadioButton::indicator::checked{border: 10px solid #61136E; width: 10px; height: 10px;}")
        self.leftStaticButton.setIconSize(QtCore.QSize(16, 15))
        self.leftStaticButton.setChecked(False)
        self.leftStaticButton.setObjectName("leftStaticButton")
        self.rightButtons = QtWidgets.QButtonGroup(MainWindow)
        self.rightButtons.setObjectName("rightButtons")
        self.rightButtons.addButton(self.leftStaticButton)
        self.leftButtonLayout.addWidget(self.leftStaticButton)
        self.leftBreatheButton = QtWidgets.QRadioButton(self.gridLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.leftBreatheButton.sizePolicy().hasHeightForWidth())
        self.leftBreatheButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftBreatheButton.setFont(font)
        self.leftBreatheButton.setStyleSheet("QRadioButton{color: #000000;}\n"
"\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px;}\n"
"\n"
"QRadioButton::indicator::checked{border: 10px solid #61136E; width: 10px; height: 10px;}")
        self.leftBreatheButton.setIconSize(QtCore.QSize(16, 15))
        self.leftBreatheButton.setChecked(False)
        self.leftBreatheButton.setObjectName("leftBreatheButton")
        self.rightButtons.addButton(self.leftBreatheButton)
        self.leftButtonLayout.addWidget(self.leftBreatheButton)
        self.leftCycleButton = QtWidgets.QRadioButton(self.gridLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.leftCycleButton.sizePolicy().hasHeightForWidth())
        self.leftCycleButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftCycleButton.setFont(font)
        self.leftCycleButton.setStyleSheet("QRadioButton{color: #000000;}\n"
"\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px;}\n"
"\n"
"QRadioButton::indicator::checked{border: 10px solid #61136E; width: 10px; height: 10px;}")
        self.leftCycleButton.setIconSize(QtCore.QSize(16, 15))
        self.leftCycleButton.setChecked(True)
        self.leftCycleButton.setObjectName("leftCycleButton")
        self.rightButtons.addButton(self.leftCycleButton)
        self.leftButtonLayout.addWidget(self.leftCycleButton)
        self.verticalLayout.addLayout(self.leftButtonLayout)
        self.leftDial = QtWidgets.QDial(self.gridLayoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.leftDial.sizePolicy().hasHeightForWidth())
        self.leftDial.setSizePolicy(sizePolicy)
        self.leftDial.setMinimumSize(QtCore.QSize(0, 150))
        self.leftDial.setMaximum(30)
        self.leftDial.setPageStep(5)
        self.leftDial.setProperty("value", 1)
        self.leftDial.setWrapping(False)
        self.leftDial.setNotchesVisible(True)
        self.leftDial.setObjectName("leftDial")
        self.verticalLayout.addWidget(self.leftDial)
        self.leftGrid.addLayout(self.verticalLayout, 1, 4, 1, 1)
        self.leftBlueValue = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftBlueValue.setFont(font)
        self.leftBlueValue.setStyleSheet("color: #d6d6d6")
        self.leftBlueValue.setAlignment(QtCore.Qt.AlignCenter)
        self.leftBlueValue.setObjectName("leftBlueValue")
        self.leftGrid.addWidget(self.leftBlueValue, 2, 2, 1, 1)
        self.leftCYCLE = QtWidgets.QLabel(self.gridLayoutWidget)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.leftCYCLE.setFont(font)
        self.leftCYCLE.setStyleSheet("color: #000000")
        self.leftCYCLE.setAlignment(QtCore.Qt.AlignCenter)
        self.leftCYCLE.setObjectName("leftCYCLE")
        self.leftGrid.addWidget(self.leftCYCLE, 2, 4, 1, 1)
        self.toolBox.addItem(self.leftSide, "")
        self.rightSide = QtWidgets.QWidget()
        self.rightSide.setGeometry(QtCore.QRect(0, 0, 800, 262))
        self.rightSide.setObjectName("rightSide")
        self.gridLayoutWidget_2 = QtWidgets.QWidget(self.rightSide)
        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(0, 0, 821, 261))
        self.gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        self.rightGrid = QtWidgets.QGridLayout(self.gridLayoutWidget_2)
        self.rightGrid.setContentsMargins(0, 0, 0, 0)
        self.rightGrid.setHorizontalSpacing(4)
        self.rightGrid.setVerticalSpacing(3)
        self.rightGrid.setObjectName("rightGrid")
        self.rightRedSlider = QtWidgets.QSlider(self.gridLayoutWidget_2)
        self.rightRedSlider.setEnabled(False)
        self.rightRedSlider.setMinimumSize(QtCore.QSize(90, 0))
        self.rightRedSlider.setStyleSheet("QSlider::groove:vertical {\n"
"    border: 1px solid #d6d6d6;\n"
"    width: 4px;\n"
"    background: #d6d6d6;\n"
"    margin: 5px;\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"    background: #ffffff;\n"
"    border: 1px solid #d6d6d6;\n"
"    height: 18px;\n"
"    margin: 2px -20px;\n"
"    border-radius: 3px;\n"
"}")
        self.rightRedSlider.setMaximum(255)
        self.rightRedSlider.setPageStep(16)
        self.rightRedSlider.setOrientation(QtCore.Qt.Vertical)
        self.rightRedSlider.setObjectName("rightRedSlider")
        self.rightGrid.addWidget(self.rightRedSlider, 1, 0, 1, 1)
        self.rightRED = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightRED.setFont(font)
        self.rightRED.setStyleSheet("color: #d6d6d6")
        self.rightRED.setAlignment(QtCore.Qt.AlignCenter)
        self.rightRED.setObjectName("rightRED")
        self.rightGrid.addWidget(self.rightRED, 0, 0, 1, 1)
        self.rightGreenValue = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightGreenValue.setFont(font)
        self.rightGreenValue.setStyleSheet("color: #d6d6d6")
        self.rightGreenValue.setAlignment(QtCore.Qt.AlignCenter)
        self.rightGreenValue.setObjectName("rightGreenValue")
        self.rightGrid.addWidget(self.rightGreenValue, 2, 1, 1, 1)
        self.rightColor = QtWidgets.QLabel(self.gridLayoutWidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rightColor.sizePolicy().hasHeightForWidth())
        self.rightColor.setSizePolicy(sizePolicy)
        self.rightColor.setMinimumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightColor.setFont(font)
        self.rightColor.setStyleSheet("border: 2px solid #000000;\n"
"color: #000000;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(255, 0, 0, 255), stop:0.166 rgba(255, 255, 0, 255), stop:0.333 rgba(0, 255, 0, 255), stop:0.5 rgba(0, 255, 255, 255), stop:0.666 rgba(0, 0, 255, 255), stop:0.833 rgba(255, 0, 255, 255), stop:1 rgba(255, 0, 0, 255));")
        self.rightColor.setFrameShape(QtWidgets.QFrame.Box)
        self.rightColor.setText("")
        self.rightColor.setAlignment(QtCore.Qt.AlignCenter)
        self.rightColor.setObjectName("rightColor")
        self.rightGrid.addWidget(self.rightColor, 1, 3, 1, 1)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.rightButtonLayout = QtWidgets.QHBoxLayout()
        self.rightButtonLayout.setSpacing(0)
        self.rightButtonLayout.setObjectName("rightButtonLayout")
        self.rightStaticButton = QtWidgets.QRadioButton(self.gridLayoutWidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rightStaticButton.sizePolicy().hasHeightForWidth())
        self.rightStaticButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightStaticButton.setFont(font)
        self.rightStaticButton.setStyleSheet("QRadioButton{color: #000000;}\n"
"\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px;}\n"
"\n"
"QRadioButton::indicator::checked{border: 10px solid #61136E; width: 10px; height: 10px;}")
        self.rightStaticButton.setIconSize(QtCore.QSize(16, 15))
        self.rightStaticButton.setChecked(False)
        self.rightStaticButton.setObjectName("rightStaticButton")
        self.leftButtons = QtWidgets.QButtonGroup(MainWindow)
        self.leftButtons.setObjectName("leftButtons")
        self.leftButtons.addButton(self.rightStaticButton)
        self.rightButtonLayout.addWidget(self.rightStaticButton)
        self.rightBreatheButton = QtWidgets.QRadioButton(self.gridLayoutWidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rightBreatheButton.sizePolicy().hasHeightForWidth())
        self.rightBreatheButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightBreatheButton.setFont(font)
        self.rightBreatheButton.setStyleSheet("QRadioButton{color: #000000;}\n"
"\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px;}\n"
"\n"
"QRadioButton::indicator::checked{border: 10px solid #61136E; width: 10px; height: 10px;}")
        self.rightBreatheButton.setIconSize(QtCore.QSize(16, 15))
        self.rightBreatheButton.setChecked(False)
        self.rightBreatheButton.setObjectName("rightBreatheButton")
        self.leftButtons.addButton(self.rightBreatheButton)
        self.rightButtonLayout.addWidget(self.rightBreatheButton)
        self.rightCycleButton = QtWidgets.QRadioButton(self.gridLayoutWidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rightCycleButton.sizePolicy().hasHeightForWidth())
        self.rightCycleButton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightCycleButton.setFont(font)
        self.rightCycleButton.setStyleSheet("QRadioButton{color: #000000;}\n"
"\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px;}\n"
"\n"
"QRadioButton::indicator::checked{border: 10px solid #61136E; width: 10px; height: 10px;}")
        self.rightCycleButton.setIconSize(QtCore.QSize(16, 15))
        self.rightCycleButton.setChecked(True)
        self.rightCycleButton.setObjectName("rightCycleButton")
        self.leftButtons.addButton(self.rightCycleButton)
        self.rightButtonLayout.addWidget(self.rightCycleButton)
        self.verticalLayout_2.addLayout(self.rightButtonLayout)
        self.rightDial = QtWidgets.QDial(self.gridLayoutWidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rightDial.sizePolicy().hasHeightForWidth())
        self.rightDial.setSizePolicy(sizePolicy)
        self.rightDial.setMinimumSize(QtCore.QSize(0, 150))
        self.rightDial.setMaximum(30)
        self.rightDial.setPageStep(5)
        self.rightDial.setProperty("value", 1)
        self.rightDial.setWrapping(False)
        self.rightDial.setNotchesVisible(True)
        self.rightDial.setObjectName("rightDial")
        self.verticalLayout_2.addWidget(self.rightDial)
        self.rightGrid.addLayout(self.verticalLayout_2, 1, 4, 1, 1)
        self.rightGreenSlider = QtWidgets.QSlider(self.gridLayoutWidget_2)
        self.rightGreenSlider.setEnabled(False)
        self.rightGreenSlider.setMinimumSize(QtCore.QSize(90, 0))
        self.rightGreenSlider.setStyleSheet("QSlider::groove:vertical {\n"
"    border: 1px solid #d6d6d6;\n"
"    width: 4px;\n"
"    background: #d6d6d6;\n"
"    margin: 5px;\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"    background: #ffffff;\n"
"    border: 1px solid #d6d6d6;\n"
"    height: 18px;\n"
"    margin: 2px -20px;\n"
"    border-radius: 3px;\n"
"}")
        self.rightGreenSlider.setMaximum(255)
        self.rightGreenSlider.setPageStep(16)
        self.rightGreenSlider.setOrientation(QtCore.Qt.Vertical)
        self.rightGreenSlider.setObjectName("rightGreenSlider")
        self.rightGrid.addWidget(self.rightGreenSlider, 1, 1, 1, 1)
        self.rightCYCLE = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightCYCLE.setFont(font)
        self.rightCYCLE.setStyleSheet("color: #000000")
        self.rightCYCLE.setAlignment(QtCore.Qt.AlignCenter)
        self.rightCYCLE.setObjectName("rightCYCLE")
        self.rightGrid.addWidget(self.rightCYCLE, 2, 4, 1, 1)
        self.rightBLUE = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightBLUE.setFont(font)
        self.rightBLUE.setStyleSheet("color: #d6d6d6")
        self.rightBLUE.setAlignment(QtCore.Qt.AlignCenter)
        self.rightBLUE.setObjectName("rightBLUE")
        self.rightGrid.addWidget(self.rightBLUE, 0, 2, 1, 1)
        self.rightBlueValue = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightBlueValue.setFont(font)
        self.rightBlueValue.setStyleSheet("color: #d6d6d6")
        self.rightBlueValue.setAlignment(QtCore.Qt.AlignCenter)
        self.rightBlueValue.setObjectName("rightBlueValue")
        self.rightGrid.addWidget(self.rightBlueValue, 2, 2, 1, 1)
        self.rightRedValue = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightRedValue.setFont(font)
        self.rightRedValue.setStyleSheet("color: #d6d6d6")
        self.rightRedValue.setAlignment(QtCore.Qt.AlignCenter)
        self.rightRedValue.setObjectName("rightRedValue")
        self.rightGrid.addWidget(self.rightRedValue, 2, 0, 1, 1)
        self.rightBlueSlider = QtWidgets.QSlider(self.gridLayoutWidget_2)
        self.rightBlueSlider.setEnabled(False)
        self.rightBlueSlider.setMinimumSize(QtCore.QSize(90, 0))
        self.rightBlueSlider.setStyleSheet("QSlider::groove:vertical {\n"
"    border: 1px solid #d6d6d6;\n"
"    width: 4px;\n"
"    background: #d6d6d6;\n"
"    margin: 5px;\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"    background: #ffffff;\n"
"    border: 1px solid #d6d6d6;\n"
"    height: 18px;\n"
"    margin: 2px -20px;\n"
"    border-radius: 3px;\n"
"}")
        self.rightBlueSlider.setMaximum(255)
        self.rightBlueSlider.setPageStep(16)
        self.rightBlueSlider.setOrientation(QtCore.Qt.Vertical)
        self.rightBlueSlider.setObjectName("rightBlueSlider")
        self.rightGrid.addWidget(self.rightBlueSlider, 1, 2, 1, 1)
        self.rightSTYLE = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightSTYLE.setFont(font)
        self.rightSTYLE.setStyleSheet("color: #000000")
        self.rightSTYLE.setAlignment(QtCore.Qt.AlignCenter)
        self.rightSTYLE.setObjectName("rightSTYLE")
        self.rightGrid.addWidget(self.rightSTYLE, 0, 4, 1, 1)
        self.rightGREEN = QtWidgets.QLabel(self.gridLayoutWidget_2)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rightGREEN.setFont(font)
        self.rightGREEN.setStyleSheet("color: #d6d6d6")
        self.rightGREEN.setAlignment(QtCore.Qt.AlignCenter)
        self.rightGREEN.setObjectName("rightGREEN")
        self.rightGrid.addWidget(self.rightGREEN, 0, 1, 1, 1)
        self.toolBox.addItem(self.rightSide, "")
        self.frontColors = QtWidgets.QWidget()
        self.frontColors.setGeometry(QtCore.QRect(0, 0, 800, 262))
        self.frontColors.setObjectName("frontColors")
        self.layoutWidget = QtWidgets.QWidget(self.frontColors)
        self.layoutWidget.setGeometry(QtCore.QRect(0, 0, 801, 261))
        self.layoutWidget.setObjectName("layoutWidget")
        self.frontColorLayout = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.frontColorLayout.setContentsMargins(0, 0, 0, 0)
        self.frontColorLayout.setObjectName("frontColorLayout")
        self.frontColorGrid = QtWidgets.QGridLayout()
        self.frontColorGrid.setContentsMargins(0, -1, -1, -1)
        self.frontColorGrid.setHorizontalSpacing(4)
        self.frontColorGrid.setVerticalSpacing(3)
        self.frontColorGrid.setObjectName("frontColorGrid")
        self.frontBlueSlider = QtWidgets.QSlider(self.layoutWidget)
        self.frontBlueSlider.setEnabled(False)
        self.frontBlueSlider.setMinimumSize(QtCore.QSize(90, 0))
        self.frontBlueSlider.setStyleSheet("QSlider::groove:vertical {\n"
"    border: 1px solid #d6d6d6;\n"
"    width: 4px;\n"
"    background: #d6d6d6;\n"
"    margin: 5px;\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"    background: #ffffff;\n"
"    border: 1px solid #d6d6d6;\n"
"    height: 18px;\n"
"    margin: 2px -20px;\n"
"    border-radius: 3px;\n"
"}")
        self.frontBlueSlider.setMaximum(255)
        self.frontBlueSlider.setPageStep(16)
        self.frontBlueSlider.setOrientation(QtCore.Qt.Vertical)
        self.frontBlueSlider.setObjectName("frontBlueSlider")
        self.frontColorGrid.addWidget(self.frontBlueSlider, 1, 2, 1, 1)
        self.frontRedValue = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.frontRedValue.setFont(font)
        self.frontRedValue.setStyleSheet("color: #d6d6d6")
        self.frontRedValue.setAlignment(QtCore.Qt.AlignCenter)
        self.frontRedValue.setObjectName("frontRedValue")
        self.frontColorGrid.addWidget(self.frontRedValue, 2, 0, 1, 1)
        self.frontRED = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.frontRED.setFont(font)
        self.frontRED.setStyleSheet("color: #d6d6d6")
        self.frontRED.setAlignment(QtCore.Qt.AlignCenter)
        self.frontRED.setObjectName("frontRED")
        self.frontColorGrid.addWidget(self.frontRED, 0, 0, 1, 1)
        self.frontGREEN = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.frontGREEN.setFont(font)
        self.frontGREEN.setStyleSheet("color: #d6d6d6")
        self.frontGREEN.setAlignment(QtCore.Qt.AlignCenter)
        self.frontGREEN.setObjectName("frontGREEN")
        self.frontColorGrid.addWidget(self.frontGREEN, 0, 1, 1, 1)
        self.frontGreenValue = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.frontGreenValue.setFont(font)
        self.frontGreenValue.setStyleSheet("color: #d6d6d6")
        self.frontGreenValue.setAlignment(QtCore.Qt.AlignCenter)
        self.frontGreenValue.setObjectName("frontGreenValue")
        self.frontColorGrid.addWidget(self.frontGreenValue, 2, 1, 1, 1)
        self.frontBLUE = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.frontBLUE.setFont(font)
        self.frontBLUE.setStyleSheet("color: #d6d6d6")
        self.frontBLUE.setAlignment(QtCore.Qt.AlignCenter)
        self.frontBLUE.setObjectName("frontBLUE")
        self.frontColorGrid.addWidget(self.frontBLUE, 0, 2, 1, 1)
        self.frontRedSlider = QtWidgets.QSlider(self.layoutWidget)
        self.frontRedSlider.setEnabled(False)
        self.frontRedSlider.setMinimumSize(QtCore.QSize(90, 0))
        self.frontRedSlider.setStyleSheet("QSlider::groove:vertical {\n"
"    border: 1px solid #d6d6d6;\n"
"    width: 4px;\n"
"    background: #d6d6d6;\n"
"    margin: 5px;\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"    background: #ffffff;\n"
"    border: 1px solid #d6d6d6;\n"
"    height: 18px;\n"
"    margin: 2px -20px;\n"
"    border-radius: 3px;\n"
"}")
        self.frontRedSlider.setMaximum(255)
        self.frontRedSlider.setPageStep(16)
        self.frontRedSlider.setOrientation(QtCore.Qt.Vertical)
        self.frontRedSlider.setObjectName("frontRedSlider")
        self.frontColorGrid.addWidget(self.frontRedSlider, 1, 0, 1, 1)
        self.frontGreenSlider = QtWidgets.QSlider(self.layoutWidget)
        self.frontGreenSlider.setEnabled(False)
        self.frontGreenSlider.setMinimumSize(QtCore.QSize(90, 0))
        self.frontGreenSlider.setStyleSheet("QSlider::groove:vertical {\n"
"    border: 1px solid #d6d6d6;\n"
"    width: 4px;\n"
"    background: #d6d6d6;\n"
"    margin: 5px;\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"    background: #ffffff;\n"
"    border: 1px solid #d6d6d6;\n"
"    height: 18px;\n"
"    margin: 2px -20px;\n"
"    border-radius: 3px;\n"
"}")
        self.frontGreenSlider.setMaximum(255)
        self.frontGreenSlider.setPageStep(16)
        self.frontGreenSlider.setOrientation(QtCore.Qt.Vertical)
        self.frontGreenSlider.setObjectName("frontGreenSlider")
        self.frontColorGrid.addWidget(self.frontGreenSlider, 1, 1, 1, 1)
        self.frontBlueValue = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.frontBlueValue.setFont(font)
        self.frontBlueValue.setStyleSheet("color: #d6d6d6")
        self.frontBlueValue.setAlignment(QtCore.Qt.AlignCenter)
        self.frontBlueValue.setObjectName("frontBlueValue")
        self.frontColorGrid.addWidget(self.frontBlueValue, 2, 2, 1, 1)
        self.frontColor = QtWidgets.QLabel(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frontColor.sizePolicy().hasHeightForWidth())
        self.frontColor.setSizePolicy(sizePolicy)
        self.frontColor.setMinimumSize(QtCore.QSize(60, 60))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.frontColor.setFont(font)
        self.frontColor.setStyleSheet("border: 2px solid #000000;\n"
"color: #000000;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(255, 0, 0, 255), stop:0.166 rgba(255, 255, 0, 255), stop:0.333 rgba(0, 255, 0, 255), stop:0.5 rgba(0, 255, 255, 255), stop:0.666 rgba(0, 0, 255, 255), stop:0.833 rgba(255, 0, 255, 255), stop:1 rgba(255, 0, 0, 255));")
        self.frontColor.setFrameShape(QtWidgets.QFrame.Box)
        self.frontColor.setText("")
        self.frontColor.setAlignment(QtCore.Qt.AlignCenter)
        self.frontColor.setObjectName("frontColor")
        self.frontColorGrid.addWidget(self.frontColor, 1, 3, 1, 1)
        self.frontColorLayout.addLayout(self.frontColorGrid)
        spacerItem = QtWidgets.QSpacerItem(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.frontColorLayout.addItem(spacerItem)
        self.ledSelector = QtWidgets.QVBoxLayout()
        self.ledSelector.setSpacing(3)
        self.ledSelector.setObjectName("ledSelector")
        self.SELECTOR = QtWidgets.QLabel(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.SELECTOR.sizePolicy().hasHeightForWidth())
        self.SELECTOR.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.SELECTOR.setFont(font)
        self.SELECTOR.setStyleSheet("color: #000000")
        self.SELECTOR.setAlignment(QtCore.Qt.AlignCenter)
        self.SELECTOR.setObjectName("SELECTOR")
        self.ledSelector.addWidget(self.SELECTOR)
        self.selectorDial = QtWidgets.QDial(self.layoutWidget)
        self.selectorDial.setEnabled(False)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.selectorDial.setFont(font)
        self.selectorDial.setMaximum(24)
        self.selectorDial.setPageStep(1)
        self.selectorDial.setWrapping(True)
        self.selectorDial.setNotchesVisible(True)
        self.selectorDial.setObjectName("selectorDial")
        self.ledSelector.addWidget(self.selectorDial)
        self.applyAllCheckBox = QtWidgets.QCheckBox(self.layoutWidget)
        self.applyAllCheckBox.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.applyAllCheckBox.sizePolicy().hasHeightForWidth())
        self.applyAllCheckBox.setSizePolicy(sizePolicy)
        self.applyAllCheckBox.setMinimumSize(QtCore.QSize(200, 0))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.applyAllCheckBox.setFont(font)
        self.applyAllCheckBox.setStyleSheet("QCheckBox{spacing: 10px; color: #000000;}\n"
"QCheckBox::indicator{border: 3px solid #000000; border-radius: 6px; background-color: #FFFFFF; width: 20px; height: 20px;}\n"
"QCheckBox::indicator:checked {image: url(checkmark.png);}")
        self.applyAllCheckBox.setChecked(True)
        self.applyAllCheckBox.setObjectName("applyAllCheckBox")
        self.ledSelector.addWidget(self.applyAllCheckBox)
        self.frontColorLayout.addLayout(self.ledSelector)
        spacerItem1 = QtWidgets.QSpacerItem(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.frontColorLayout.addItem(spacerItem1)
        self.toolBox.addItem(self.frontColors, "")
        self.frontAnimation = QtWidgets.QWidget()
        self.frontAnimation.setGeometry(QtCore.QRect(0, 0, 800, 262))
        self.frontAnimation.setObjectName("frontAnimation")
        self.gridLayoutWidget_3 = QtWidgets.QWidget(self.frontAnimation)
        self.gridLayoutWidget_3.setGeometry(QtCore.QRect(0, 0, 801, 261))
        self.gridLayoutWidget_3.setObjectName("gridLayoutWidget_3")
        self.frontGrid = QtWidgets.QGridLayout(self.gridLayoutWidget_3)
        self.frontGrid.setContentsMargins(0, 0, 0, 0)
        self.frontGrid.setSpacing(3)
        self.frontGrid.setObjectName("frontGrid")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setSpacing(10)
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem2)
        self.rotateCheckBox = QtWidgets.QCheckBox(self.gridLayoutWidget_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.rotateCheckBox.sizePolicy().hasHeightForWidth())
        self.rotateCheckBox.setSizePolicy(sizePolicy)
        self.rotateCheckBox.setMinimumSize(QtCore.QSize(250, 0))
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rotateCheckBox.setFont(font)
        self.rotateCheckBox.setStyleSheet("QCheckBox{spacing: 10px; color: #000000;}\n"
"QCheckBox::indicator{border: 3px solid #000000; border-radius: 6px; background-color: #FFFFFF; width: 20px; height: 20px;}\n"
"QCheckBox::indicator:checked {image: url(checkmark.png);}")
        self.rotateCheckBox.setObjectName("rotateCheckBox")
        self.horizontalLayout.addWidget(self.rotateCheckBox)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem3)
        self.frontGrid.addLayout(self.horizontalLayout, 0, 0, 1, 1)
        self.rotateCYCLE = QtWidgets.QLabel(self.gridLayoutWidget_3)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.rotateCYCLE.setFont(font)
        self.rotateCYCLE.setStyleSheet("color: #000000")
        self.rotateCYCLE.setAlignment(QtCore.Qt.AlignCenter)
        self.rotateCYCLE.setObjectName("rotateCYCLE")
        self.frontGrid.addWidget(self.rotateCYCLE, 2, 0, 1, 1)
        self.frontCYCLE = QtWidgets.QLabel(self.gridLayoutWidget_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frontCYCLE.sizePolicy().hasHeightForWidth())
        self.frontCYCLE.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.frontCYCLE.setFont(font)
        self.frontCYCLE.setStyleSheet("color: #000000")
        self.frontCYCLE.setAlignment(QtCore.Qt.AlignCenter)
        self.frontCYCLE.setObjectName("frontCYCLE")
        self.frontGrid.addWidget(self.frontCYCLE, 2, 1, 1, 1)
        self.frontButtonLayout = QtWidgets.QHBoxLayout()
        self.frontButtonLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.frontButtonLayout.setContentsMargins(-1, -1, 10, -1)
        self.frontButtonLayout.setSpacing(0)
        self.frontButtonLayout.setObjectName("frontButtonLayout")
        self.frontStaticButton = QtWidgets.QRadioButton(self.gridLayoutWidget_3)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.frontStaticButton.setFont(font)
        self.frontStaticButton.setStyleSheet("QRadioButton{color: #000000;}\n"
"\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px;}\n"
"\n"
"QRadioButton::indicator::checked{border: 10px solid #61136E; width: 10px; height: 10px;}")
        self.frontStaticButton.setObjectName("frontStaticButton")
        self.frontButtons = QtWidgets.QButtonGroup(MainWindow)
        self.frontButtons.setObjectName("frontButtons")
        self.frontButtons.addButton(self.frontStaticButton)
        self.frontButtonLayout.addWidget(self.frontStaticButton)
        self.frontBreatheButton = QtWidgets.QRadioButton(self.gridLayoutWidget_3)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.frontBreatheButton.setFont(font)
        self.frontBreatheButton.setStyleSheet("QRadioButton{color: #000000;}\n"
"\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px;}\n"
"\n"
"QRadioButton::indicator::checked{border: 10px solid #61136E; width: 10px; height: 10px;}")
        self.frontBreatheButton.setObjectName("frontBreatheButton")
        self.frontButtons.addButton(self.frontBreatheButton)
        self.frontButtonLayout.addWidget(self.frontBreatheButton)
        self.frontCycleButton = QtWidgets.QRadioButton(self.gridLayoutWidget_3)
        font = QtGui.QFont()
        font.setFamily("Droid")
        font.setPointSize(20)
        self.frontCycleButton.setFont(font)
        self.frontCycleButton.setStyleSheet("QRadioButton{color: #000000;}\n"
"\n"
"QRadioButton::indicator{border: 3px solid #000000; border-radius: 15px; background-color: #FFFFFF; width: 24px; height: 24px; margin-left: 5px; margin-right: 5px;}\n"
"\n"
"QRadioButton::indicator::checked{border: 10px solid #61136E; width: 10px; height: 10px;}")
        self.frontCycleButton.setChecked(True)
        self.frontCycleButton.setObjectName("frontCycleButton")
        self.frontButtons.addButton(self.frontCycleButton)
        self.frontButtonLayout.addWidget(self.frontCycleButton)
        self.frontGrid.addLayout(self.frontButtonLayout, 0, 1, 1, 1)
        self.rotateDial = QtWidgets.QDial(self.gridLayoutWidget_3)
        self.rotateDial.setEnabled(False)
        self.rotateDial.setMinimumSize(QtCore.QSize(0, 175))
        self.rotateDial.setMaximum(18)
        self.rotateDial.setPageStep(2)
        self.rotateDial.setNotchesVisible(True)
        self.rotateDial.setObjectName("rotateDial")
        self.frontGrid.addWidget(self.rotateDial, 1, 0, 1, 1)
        self.frontDial = QtWidgets.QDial(self.gridLayoutWidget_3)
        self.frontDial.setMinimumSize(QtCore.QSize(0, 0))
        self.frontDial.setMaximum(30)
        self.frontDial.setPageStep(5)
        self.frontDial.setProperty("value", 1)
        self.frontDial.setNotchesVisible(True)
        self.frontDial.setObjectName("frontDial")
        self.frontGrid.addWidget(self.frontDial, 1, 1, 1, 1)
        self.toolBox.addItem(self.frontAnimation, "")
        self.tabWidget.addTab(self.led, "")
        self.data = QtWidgets.QWidget()
        self.data.setStyleSheet("")
        self.data.setObjectName("data")
        self.tabWidget.addTab(self.data, "")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(1)
        self.toolBox.setCurrentIndex(3)
        self.toolBox.layout().setSpacing(-1)
        self.leftRedSlider.valueChanged['int'].connect(self.leftRedValue.setNum)
        self.leftGreenSlider.valueChanged['int'].connect(self.leftGreenValue.setNum)
        self.leftBlueSlider.valueChanged['int'].connect(self.leftBlueValue.setNum)
        self.rightRedSlider.valueChanged['int'].connect(self.rightRedValue.setNum)
        self.rightGreenSlider.valueChanged['int'].connect(self.rightGreenValue.setNum)
        self.rightBlueSlider.valueChanged['int'].connect(self.rightBlueValue.setNum)
        self.leftCycleButton.toggled['bool'].connect(self.leftRedSlider.setDisabled)
        self.leftCycleButton.toggled['bool'].connect(self.leftGreenSlider.setDisabled)
        self.leftCycleButton.toggled['bool'].connect(self.leftBlueSlider.setDisabled)
        self.rightCycleButton.toggled['bool'].connect(self.rightRedSlider.setDisabled)
        self.rightCycleButton.toggled['bool'].connect(self.rightGreenSlider.setDisabled)
        self.rightCycleButton.toggled['bool'].connect(self.rightBlueSlider.setDisabled)
        self.frontRedSlider.valueChanged['int'].connect(self.frontRedValue.setNum)
        self.frontGreenSlider.valueChanged['int'].connect(self.frontGreenValue.setNum)
        self.frontBlueSlider.valueChanged['int'].connect(self.frontBlueValue.setNum)
        self.applyAllCheckBox.toggled['bool'].connect(self.selectorDial.setDisabled)
        self.rotateCheckBox.toggled['bool'].connect(self.rotateDial.setEnabled)
        self.frontStaticButton.toggled['bool'].connect(self.frontDial.setDisabled)
        self.frontBreatheButton.toggled['bool'].connect(self.frontDial.setEnabled)
        self.frontCycleButton.toggled['bool'].connect(self.frontDial.setEnabled)
        self.rightStaticButton.toggled['bool'].connect(self.rightDial.setDisabled)
        self.leftStaticButton.toggled['bool'].connect(self.leftDial.setDisabled)
        self.frontCycleButton.toggled['bool'].connect(self.frontRedSlider.setDisabled)
        self.frontCycleButton.toggled['bool'].connect(self.frontBlueSlider.setDisabled)
        self.frontCycleButton.toggled['bool'].connect(self.frontGreenSlider.setDisabled)
        self.frontCycleButton.toggled['bool'].connect(self.applyAllCheckBox.setDisabled)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.semiButton.setText(_translate("MainWindow", "semi-auto"))
        self.burstButton.setText(_translate("MainWindow", "burst: 3"))
        self.autoButton.setText(_translate("MainWindow", "automatic"))
        self.FPSupButton.setText(_translate("MainWindow", "5"))
        self.FPSdownButton.setText(_translate("MainWindow", "6"))
        self.FPS.setText(_translate("MainWindow", "FPS"))
        self.AMMO.setText(_translate("MainWindow", "AMMO"))
        self.ROCKETPRESSURE.setText(_translate("MainWindow", "Rocket Pressure"))
        self.PSIdownButton.setText(_translate("MainWindow", "6"))
        self.PSIupButton.setText(_translate("MainWindow", "5"))
        self.laserButton.setText(_translate("MainWindow", "laser"))
        self.lightButton.setText(_translate("MainWindow", "flashlight"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.status), _translate("MainWindow", "status"))
        self.leftGreenValue.setText(_translate("MainWindow", "0"))
        self.leftSTYLE.setText(_translate("MainWindow", "animation style"))
        self.leftRED.setText(_translate("MainWindow", "red"))
        self.leftRedValue.setText(_translate("MainWindow", "0"))
        self.leftGREEN.setText(_translate("MainWindow", "green"))
        self.leftBLUE.setText(_translate("MainWindow", "blue"))
        self.leftStaticButton.setText(_translate("MainWindow", "static"))
        self.leftBreatheButton.setText(_translate("MainWindow", "breathe"))
        self.leftCycleButton.setText(_translate("MainWindow", "cycle"))
        self.leftBlueValue.setText(_translate("MainWindow", "0"))
        self.leftCYCLE.setText(_translate("MainWindow", "cycle time: 1 sec"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.leftSide), _translate("MainWindow", " left side"))
        self.rightRED.setText(_translate("MainWindow", "red"))
        self.rightGreenValue.setText(_translate("MainWindow", "0"))
        self.rightStaticButton.setText(_translate("MainWindow", "static"))
        self.rightBreatheButton.setText(_translate("MainWindow", "breathe"))
        self.rightCycleButton.setText(_translate("MainWindow", "cycle"))
        self.rightCYCLE.setText(_translate("MainWindow", "cycle time: 1 sec"))
        self.rightBLUE.setText(_translate("MainWindow", "blue"))
        self.rightBlueValue.setText(_translate("MainWindow", "0"))
        self.rightRedValue.setText(_translate("MainWindow", "0"))
        self.rightSTYLE.setText(_translate("MainWindow", "animation style"))
        self.rightGREEN.setText(_translate("MainWindow", "green"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.rightSide), _translate("MainWindow", " right side"))
        self.frontRedValue.setText(_translate("MainWindow", "0"))
        self.frontRED.setText(_translate("MainWindow", "red"))
        self.frontGREEN.setText(_translate("MainWindow", "green"))
        self.frontGreenValue.setText(_translate("MainWindow", "0"))
        self.frontBLUE.setText(_translate("MainWindow", "blue"))
        self.frontBlueValue.setText(_translate("MainWindow", "0"))
        self.SELECTOR.setText(_translate("MainWindow", "led selector"))
        self.applyAllCheckBox.setText(_translate("MainWindow", "apply to all"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.frontColors), _translate("MainWindow", " front colors"))
        self.rotateCheckBox.setText(_translate("MainWindow", "rotating pattern"))
        self.rotateCYCLE.setText(_translate("MainWindow", "rotation time: 1 sec"))
        self.frontCYCLE.setText(_translate("MainWindow", "cycle time: 1 sec"))
        self.frontStaticButton.setText(_translate("MainWindow", "static"))
        self.frontBreatheButton.setText(_translate("MainWindow", "breathe"))
        self.frontCycleButton.setText(_translate("MainWindow", "cycle"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.frontAnimation), _translate("MainWindow", " front animation"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.led), _translate("MainWindow", "led settings"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.data), _translate("MainWindow", "data logs"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
